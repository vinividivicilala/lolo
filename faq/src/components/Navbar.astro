---
const { currentPage = 'faq' } = Astro.props;
---

<nav class="navbar">
  <div class="nav-container">
    <div class="nav-logo">
      <a href="/">Note Farid</a>
    </div>
    <ul class="nav-menu">
      <li class="nav-item">
        <a href="/" class={`nav-link ${currentPage === 'home' ? 'active' : ''}`}>Home</a>
      </li>
      <li class="nav-item">
        <a href="/faq" class={`nav-link ${currentPage === 'faq' ? 'active' : ''}`}>FAQ</a>
      </li>
      <li class="nav-item">
        <a href="/blog" class={`nav-link ${currentPage === 'blog' ? 'active' : ''}`}>Blog</a>
      </li>
    </ul>
    <div class="hamburger">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </div>
  </div>
</nav>

<style>
  .navbar {
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    padding: 1rem 0;
    position: sticky;
    top: 0;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
  }
  
  .navbar.scrolled {
    background: rgba(0, 0, 0, 0.95);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    padding: 0.7rem 0;
  }
  
  .navbar.hidden {
    transform: translateY(-100%);
  }
  
  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .nav-logo a {
    color: white;
    font-size: 1.8rem;
    font-weight: 700;
    text-decoration: none;
    font-family: 'Montserrat', sans-serif;
    transition: transform 0.3s ease;
  }
  
  .nav-logo a:hover {
    transform: scale(1.05);
  }
  
  .nav-menu {
    display: flex;
    list-style: none;
    gap: 2rem;
  }
  
  .nav-link {
    color: white;
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: white;
    transition: width 0.3s ease;
  }
  
  .nav-link:hover::after,
  .nav-link.active::after {
    width: 100%;
  }
  
  .nav-link:hover, .nav-link.active {
    background: rgba(255, 255, 255, 0.1);
  }
  
  .hamburger {
    display: none;
    flex-direction: column;
    cursor: pointer;
  }
  
  .bar {
    width: 25px;
    height: 3px;
    background: white;
    margin: 3px 0;
    transition: 0.3s;
  }
  
  .hamburger.active .bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  
  .hamburger.active .bar:nth-child(2) {
    opacity: 0;
  }
  
  .hamburger.active .bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
  
  @media (max-width: 768px) {
    .hamburger {
      display: flex;
    }
    
    .nav-menu {
      position: fixed;
      left: -100%;
      top: 70px;
      flex-direction: column;
      background: rgba(0, 0, 0, 0.95);
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(15px);
      width: 100%;
      text-align: center;
      transition: 0.3s;
      box-shadow: 0 10px 27px rgba(0,0,0,0.05);
      padding: 2rem 0;
      gap: 0;
      z-index: 999;
    }
    
    .nav-menu.active {
      left: 0;
    }
    
    .nav-item {
      margin: 1.5rem 0;
    }
  }
</style>

<script>
  // Import Lenis dari npm package
  import Lenis from '@studio-freight/lenis';
  
  document.addEventListener('DOMContentLoaded', function() {
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');
    const navbar = document.querySelector('.navbar');
    const navLinks = document.querySelectorAll('.nav-link');
    
    // Initialize Lenis smooth scroll
    const lenis = new Lenis({
      duration: 1.2,
      easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
      orientation: 'vertical',
      gestureOrientation: 'vertical',
      smoothWheel: true,
      smoothTouch: false,
      touchMultiplier: 2,
    });
    
    // Animation frame for Lenis
    function raf(time) {
      lenis.raf(time);
      requestAnimationFrame(raf);
    }
    
    requestAnimationFrame(raf);
    
    // Handle anchor links with Lenis
    navLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        const href = link.getAttribute('href');
        
        // Handle internal anchor links
        if (href.startsWith('#')) {
          e.preventDefault();
          const target = document.querySelector(href);
          if (target) {
            lenis.scrollTo(target, {
              offset: -80, // Offset untuk navbar height
              duration: 1.5,
            });
          }
        }
        
        // Close mobile menu
        hamburger.classList.remove('active');
        navMenu.classList.remove('active');
      });
    });
    
    // Navbar scroll effects
    let lastScrollY = window.scrollY;
    let ticking = false;
    
    function updateNavbar() {
      const currentScrollY = window.scrollY;
      
      // Add/remove scrolled class based on scroll position
      if (currentScrollY > 50) {
        navbar.classList.add('scrolled');
      } else {
        navbar.classList.remove('scrolled');
      }
      
      // Hide/show navbar on scroll
      if (currentScrollY > lastScrollY && currentScrollY > 100) {
        // Scrolling down - hide navbar
        navbar.classList.add('hidden');
      } else {
        // Scrolling up - show navbar
        navbar.classList.remove('hidden');
      }
      
      lastScrollY = currentScrollY;
      ticking = false;
    }
    
    function onScroll() {
      if (!ticking) {
        requestAnimationFrame(updateNavbar);
        ticking = true;
      }
    }
    
    // Listen to Lenis scroll events
    lenis.on('scroll', (e) => {
      onScroll();
    });
    
    // Hamburger menu functionality
    if (hamburger) {
      hamburger.addEventListener('click', function() {
        hamburger.classList.toggle('active');
        navMenu.classList.toggle('active');
        
        // Disable/enable scroll when menu is open (mobile)
        if (window.innerWidth <= 768) {
          if (navMenu.classList.contains('active')) {
            lenis.stop();
          } else {
            lenis.start();
          }
        }
      });
    }
    
    // Close menu when clicking outside (mobile)
    document.addEventListener('click', (e) => {
      if (window.innerWidth <= 768 && 
          !navbar.contains(e.target) && 
          navMenu.classList.contains('active')) {
        hamburger.classList.remove('active');
        navMenu.classList.remove('active');
        lenis.start();
      }
    });
    
    // Handle resize events
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) {
        hamburger.classList.remove('active');
        navMenu.classList.remove('active');
        lenis.start(); // Ensure scroll is enabled on desktop
      }
    });
    
    // Cleanup on page navigation (for SPA/MPA)
    window.addEventListener('beforeunload', () => {
      lenis.destroy();
    });
  });
</script>
