---
// src/pages/blog.astro
import Layout from '../layouts/Layout.astro';

// Data blog (bisa dipindah ke file terpisah nanti)
const blogPosts = {
  tentangDiri: [
    {
      title: "Perjalanan Menjadi Developer",
      date: "25 Des 2023",
      readTime: "5 min read",
      image: "/images/5.jpg",
      desc: "Bagaimana saya memulai perjalanan sebagai developer dan tantangan yang dihadapi selama proses pembelajaran.",
      tags: ["Programming", "Journey"],
      badge: "New"
    },
    {
      title: "Passion dalam Teknologi", 
      date: "20 Des 2023",
      readTime: "7 min read",
      image: "/images/5.jpg",
      desc: "Menjelajahi minat dan passion saya di dunia teknologi serta bagaimana hal itu membentuk karir saya.",
      tags: ["Technology", "Passion"],
      badge: null
    },
    {
      title: "Belajar dari Kegagalan",
      date: "15 Des 2023", 
      readTime: "4 min read",
      image: "/images/5.jpg",
      desc: "Refleksi tentang kegagalan yang pernah dialami dan pelajaran berharga yang didapat darinya.",
      tags: ["Reflection", "Growth"],
      badge: null
    }
  ],
  random: [
    {
      title: "Tips Produktivitas Harian",
      date: "10 Des 2023",
      readTime: "6 min read", 
      image: "/images/5.jpg",
      desc: "Metode dan teknik yang saya gunakan untuk tetap produktif dalam pekerjaan sehari-hari.",
      tags: ["Productivity", "Tips"],
      badge: "New"
    },
    {
      title: "Eksplorasi Desain Web Modern",
      date: "5 Des 2023",
      readTime: "8 min read",
      image: "/images/5.jpg",
      desc: "Mengenal tren desain web terkini dan bagaimana menerapkannya dalam proyek nyata.",
      tags: ["Design", "Web"],
      badge: null
    },
    {
      title: "Membaca untuk Pengembangan Diri",
      date: "1 Des 2023",
      readTime: "5 min read",
      image: "/images/5.jpg",
      desc: "Rekomendasi buku yang telah mempengaruhi pemikiran dan membantu pengembangan diri.", 
      tags: ["Reading", "Books"],
      badge: null
    }
  ]
};
---

<Layout title="Blog | Note Farid" description="Halaman blog kosong dengan desain baru." currentPage="blog">
  <div class="container">
    <main>
      <!-- HEADER SECTION -->
      <section class="header-section">
        <div class="header-content">
          <div class="title-container">
            <h1 class="big-title">
              <span class="animated-title">
                <span class="title-text" id="mainTitle">Blog</span>
              </span>
            </h1>
            <div class="subtitle-animation">
              <span class="subtitle-text">Tempat Berbagi Ilmu & Inspirasi</span>
              <div class="floating-dots">
                <span class="dot"></span>
                <span class="dot"></span>
                <span class="dot"></span>
              </div>
            </div>
          </div>
          <a href="/blog/all" class="all-blog-link">
            All Blog 
            <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" width="39" height="39" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
        </div>
      </section>

      <!-- HORIZONTAL SCROLL SECTIONS -->
      <div class="horizontal-scroll-wrapper">
        <div class="horizontal-sections-container">
          <!-- BLOG SECTION - TENTANG DIRI -->
          <section class="blog-section horizontal-section" id="tentang-diri">
            <div class="section-inner">
              <div class="section-header">
                <h2 class="section-title">
                  Tentang Diri
                  <span class="highlight-badge">{blogPosts.tentangDiri.length} Artikel</span>
                </h2>
              </div>

              <div class="blog-grid-horizontal">
                {blogPosts.tentangDiri.map((post, index) => (
                  <div class="blog-card-horizontal" data-index={index}>
                    <div class="blog-images">
                      <img src={post.image} alt={post.title} class="blog-image" />
                    </div>
                    <div class="blog-content">
                      <div class="blog-meta">
                        <span class="blog-date">
                          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2z"/>
                            <path d="M2.5 4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V4z"/>
                          </svg>
                          {post.date}
                        </span>
                        <span class="blog-read-time">
                          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                          </svg>
                          {post.readTime}
                        </span>
                        {post.badge && <span class="blog-badge">{post.badge}</span>}
                      </div>
                      <h3 class="blog-title">{post.title}</h3>
                      <p class="blog-desc">{post.desc}</p>
                      <div class="blog-tags">
                        {post.tags.map(tag => (
                          <span class="blog-tag">{tag}</span>
                        ))}
                      </div>
                      <a href="#" class="blog-read-more">
                        Baca Selengkapnya
                        <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" viewBox="0 0 16 16">
                          <path fill-rule="evenodd" d="M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z"/>
                        </svg>
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>

          <!-- BLOG SECTION - RANDOM -->
          <section class="blog-section horizontal-section" id="random">
            <div class="section-inner">
              <div class="section-header">
                <h2 class="section-title">
                  Random
                  <span class="highlight-badge">{blogPosts.random.length} Artikel</span>
                </h2>
              </div>

              <div class="blog-grid-horizontal">
                {blogPosts.random.map((post, index) => (
                  <div class="blog-card-horizontal" data-index={index}>
                    <div class="blog-images">
                      <img src={post.image} alt={post.title} class="blog-image" />
                    </div>
                    <div class="blog-content">
                      <div class="blog-meta">
                        <span class="blog-date">
                          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM2 2a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H2z"/>
                            <path d="M2.5 4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V4z"/>
                          </svg>
                          {post.date}
                        </span>
                        <span class="blog-read-time">
                          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                          </svg>
                          {post.readTime}
                        </span>
                        {post.badge && <span class="blog-badge">{post.badge}</span>}
                      </div>
                      <h3 class="blog-title">{post.title}</h3>
                      <p class="blog-desc">{post.desc}</p>
                      <div class="blog-tags">
                        {post.tags.map(tag => (
                          <span class="blog-tag">{tag}</span>
                        ))}
                      </div>
                      <a href="#" class="blog-read-more">
                        Baca Selengkapnya
                        <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" viewBox="0 0 16 16">
                          <path fill-rule="evenodd" d="M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z"/>
                        </svg>
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>
        </div>
      </div>

      <!-- DESCRIPTION SECTION (Setelah Horizontal Scroll) -->
      <section class="description-section">
        <div class="description-scroll-wrapper">
          <div class="description-content">
            <h2 class="description-title">Tentang Blog Ini</h2>
            <div class="description-text">
              <p class="large-text">
                Blog ini adalah ruang personal tempat saya berbagi cerita, pengalaman, dan pengetahuan 
                yang saya dapatkan selama perjalanan sebagai developer. Setiap tulisan di sini merupakan 
                refleksi dari proses belajar dan tumbuh yang terus berlangsung.
              </p>
              <p class="large-text">
                Dari perjalanan karir di dunia teknologi hingga refleksi kehidupan sehari-hari, 
                saya berharap konten di blog ini dapat memberikan nilai dan inspirasi bagi pembaca. 
                Tidak hanya tentang coding, tapi juga tentang bagaimana kita belajar, berkembang, 
                dan menemukan passion dalam setiap hal yang kita lakukan.
              </p>
              <p class="large-text">
                Terima kasih telah mampir dan meluangkan waktu untuk membaca. Semoga menemukan 
                sesuatu yang bermanfaat di antara baris-baris tulisan ini.
              </p>
            </div>
            <div class="description-stats">
              <div class="stat-item">
                <span class="stat-number">{blogPosts.tentangDiri.length + blogPosts.random.length}</span>
                <span class="stat-label">Total Artikel</span>
              </div>
              <div class="stat-item">
                <span class="stat-number">2</span>
                <span class="stat-label">Kategori</span>
              </div>
              <div class="stat-item">
                <span class="stat-number">2023</span>
                <span class="stat-label">Tahun Aktif</span>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
  </div>
</Layout>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');

  * {
    font-family: 'Space Mono', monospace !important;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html, body {
    overflow-x: hidden;
    width: 100%;
  }

  body {
    background: #111;
    color: #fff;
    font-family: 'Space Mono', monospace;
    font-size: 18px;
    overflow-x: hidden;
  }

  .container {
    max-width: 100%;
    margin: 0;
    padding: 0;
  }

  /* Header */
  .header-section {
    margin-bottom: 0;
    padding: 60px 20px;
    background: #111;
    position: relative;
    z-index: 10;
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .title-container {
    flex: 1;
  }

  .big-title {
    font-size: 48px;
    font-weight: 700;
    margin: 0 0 10px 0;
    color: #fff;
  }

  /* Subtitle Animation */
  .subtitle-animation {
    position: relative;
    display: inline-block;
  }

  .subtitle-text {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.8);
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
    background-size: 300% 300%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 3s ease-in-out infinite;
    font-weight: 600;
  }

  .floating-dots {
    position: absolute;
    right: -40px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    gap: 4px;
  }

  .dot {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: #4ecdc4;
    animation: floatDots 2s ease-in-out infinite;
  }

  .dot:nth-child(2) {
    background: #ff6b6b;
    animation-delay: 0.2s;
  }

  .dot:nth-child(3) {
    background: #feca57;
    animation-delay: 0.4s;
  }

  @keyframes floatDots {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-8px); }
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .all-blog-link {
    font-size: 1.4rem;
    font-weight: 700;
    display: flex;
    align-items: center;
    gap: 8px;
    color: rgba(255,255,255,0.85);
    padding: 12px 20px;
    border: 2px solid rgba(255,255,255,0.4);
    border-radius: 10px;
    text-decoration: none;
    transition: all 0.3s ease;
    background: rgba(255,255,255,0.1);
  }

  .all-blog-link:hover {
    background: rgba(255,255,255,0.2);
    color: #fff;
  }

  /* Horizontal Scroll Wrapper */
  .horizontal-scroll-wrapper {
    width: 100%;
    height: 100vh;
    overflow: hidden;
    position: relative;
  }

  .horizontal-sections-container {
    display: flex;
    width: 200vw; /* 2 sections = 200% viewport width */
    height: 100vh;
    will-change: transform;
  }

  /* Horizontal Sections */
  .horizontal-section {
    width: 100vw;
    height: 100vh;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .section-inner {
    max-width: 1200px;
    width: 100%;
    padding: 0 40px;
  }

  /* Blog Section */
  .blog-section {
    margin: 0;
  }

  .section-header {
    margin-bottom: 60px;
    text-align: center;
  }

  .section-title {
    font-size: 3rem;
    font-weight: 700;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    margin-bottom: 20px;
  }

  .highlight-badge {
    background: linear-gradient(135deg, #ff6b6b, #ffa726);
    color: white;
    padding: 8px 16px;
    border-radius: 10px;
    font-size: 1rem;
    font-weight: 600;
  }

  /* Horizontal Blog Grid */
  .blog-grid-horizontal {
    display: flex;
    gap: 40px;
    overflow-x: visible;
    width: max-content;
    margin: 0 auto;
  }

  /* Horizontal Blog Card */
  .blog-card-horizontal {
    width: 400px;
    flex-shrink: 0;
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    padding: 30px;
    transition: all 0.3s ease;
    position: relative;
    transform-style: preserve-3d;
  }

  .blog-card-horizontal:hover {
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-10px) scale(1.02);
  }

  /* Blog Images */
  .blog-images {
    display: flex;
    margin-bottom: 20px;
  }

  .blog-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 15px;
  }

  /* Blog Content */
  .blog-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .blog-meta {
    display: flex;
    gap: 15px;
    margin-bottom: 15px;
    flex-wrap: wrap;
    align-items: center;
  }

  .blog-date, .blog-read-time {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
    background: rgba(255,255,255,0.1);
    padding: 8px 12px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .blog-badge {
    background: #4ecdc4;
    color: white;
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 0.8rem;
    font-weight: 600;
  }

  .blog-title {
    font-size: 1.8rem;
    font-weight: 700;
    margin: 10px 0;
    color: #fff;
    line-height: 1.3;
  }

  .blog-desc {
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.6;
    margin-bottom: 20px;
    font-size: 1rem;
  }

  .blog-tags {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }

  .blog-tag {
    background: rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);
    color: #fff;
    padding: 6px 12px;
    border-radius: 15px;
    font-size: 0.8rem;
    font-weight: 600;
  }

  /* Baca Selengkapnya */
  .blog-read-more {
    display: inline-flex;
    align-items: center;
    gap: 10px;
    color: rgba(255, 255, 255, 0.9);
    padding: 12px 20px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    width: fit-content;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.05);
  }

  .blog-read-more:hover {
    color: #fff;
    border-color: rgba(255, 255, 255, 0.6);
    background: rgba(255, 255, 255, 0.1);
    gap: 15px;
  }

  .blog-read-more svg {
    transition: transform 0.3s ease;
  }

  .blog-read-more:hover svg {
    transform: translateX(3px);
  }

  /* Description Section */
  .description-section {
    padding: 100px 0;
    background: #111;
    position: relative;
    z-index: 10;
    height: 100vh;
    display: flex;
    align-items: center;
  }

  .description-scroll-wrapper {
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .description-content {
    max-width: none;
    margin: 0;
    padding: 0 40px;
    text-align: left;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .description-title {
    font-size: 4rem;
    font-weight: 700;
    margin-bottom: 60px;
    color: #fff;
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.1;
  }

  .description-text {
    margin-bottom: 80px;
    max-width: 800px;
  }

  .large-text {
    font-size: 1.8rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 40px;
    font-weight: 400;
  }

  .description-stats {
    display: flex;
    gap: 80px;
    flex-wrap: wrap;
  }

  .stat-item {
    text-align: left;
  }

  .stat-number {
    display: block;
    font-size: 3.5rem;
    font-weight: 700;
    color: #4ecdc4;
    margin-bottom: 15px;
    line-height: 1;
  }

  .stat-label {
    font-size: 1.1rem;
    color: rgba(255, 255, 255, 0.7);
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: 600;
  }

  /* Scroll Progress Indicator */
  .scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    z-index: 1000;
  }

  .scroll-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #ff6b6b, #4ecdc4);
    width: 0%;
    transition: width 0.1s ease;
  }

  /* Section Indicator */
  .section-indicator {
    position: fixed;
    right: 30px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 20px;
    z-index: 1000;
  }

  .section-dot {
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
  }

  .section-dot.active {
    background: #4ecdc4;
    transform: scale(1.4);
  }

  .section-dot::after {
    content: attr(data-title);
    position: absolute;
    right: 25px;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.8rem;
    white-space: nowrap;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .section-dot:hover::after {
    opacity: 1;
  }

  /* Responsive */
  @media (max-width: 768px) {
    body {
      font-size: 16px;
    }

    .header-content {
      flex-direction: column;
      text-align: center;
    }

    .big-title {
      font-size: 2.8rem;
    }

    .all-blog-link {
      width: 100%;
      justify-content: center;
      font-size: 1.2rem;
    }

    .blog-card-horizontal {
      width: 320px;
      padding: 20px;
    }

    .blog-image {
      height: 180px;
    }

    .floating-dots {
      position: static;
      transform: none;
      justify-content: center;
      margin-top: 10px;
    }

    .section-inner {
      padding: 0 20px;
    }

    .section-title {
      font-size: 2.2rem;
      flex-direction: column;
      gap: 10px;
    }

    .blog-grid-horizontal {
      gap: 20px;
    }

    .description-section {
      padding: 60px 0;
      height: auto;
      min-height: 100vh;
    }

    .description-content {
      padding: 0 20px;
    }

    .description-title {
      font-size: 2.5rem;
      margin-bottom: 40px;
    }

    .large-text {
      font-size: 1.3rem;
      margin-bottom: 30px;
    }

    .description-stats {
      gap: 40px;
    }

    .stat-number {
      font-size: 2.5rem;
    }

    .stat-label {
      font-size: 1rem;
    }

    .section-indicator {
      right: 15px;
    }
  }

  @media (max-width: 480px) {
    .header-section {
      padding: 40px 15px;
    }

    .big-title {
      font-size: 2.2rem;
    }

    .blog-image {
      height: 150px;
    }

    .blog-card-horizontal {
      width: 280px;
      padding: 15px;
    }

    .section-header {
      margin-bottom: 40px;
    }

    .section-title {
      font-size: 1.8rem;
    }

    .description-section {
      padding: 40px 0;
    }

    .description-title {
      font-size: 2rem;
      margin-bottom: 30px;
    }

    .large-text {
      font-size: 1.1rem;
      margin-bottom: 25px;
    }

    .description-stats {
      gap: 30px;
    }

    .stat-number {
      font-size: 2rem;
    }

    .stat-label {
      font-size: 0.9rem;
    }
  }
</style>

<script>
  // Import GSAP plugins
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  // Register GSAP plugins
  if (typeof window !== 'undefined') {
    gsap.registerPlugin(ScrollTrigger);
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Title animation
    const titleElement = document.getElementById('mainTitle');
    const titleVariations = [
      "Blog",
      "Articles", 
      "Stories",
      "Thoughts",
      "Journal",
      "Notes",
      "Ideas",
      "Updates"
    ];

    let currentIndex = 0;

    function changeTitle() {
      titleElement.style.opacity = '0';
      
      setTimeout(() => {
        titleElement.textContent = titleVariations[currentIndex];
        titleElement.style.opacity = '1';
        
        currentIndex = (currentIndex + 1) % titleVariations.length;
        
        setTimeout(changeTitle, 2000);
      }, 500);
    }

    // Start animation
    setTimeout(changeTitle, 1000);

    // GSAP Horizontal Scroll with ULTRA FAST Speed
    if (typeof window !== 'undefined' && gsap) {
      // Create scroll progress indicator
      const scrollProgress = document.createElement('div');
      scrollProgress.className = 'scroll-progress';
      scrollProgress.innerHTML = '<div class="scroll-progress-bar"></div>';
      document.body.appendChild(scrollProgress);
      const progressBar = scrollProgress.querySelector('.scroll-progress-bar');

      // Create section indicator
      const sectionIndicator = document.createElement('div');
      sectionIndicator.className = 'section-indicator';
      sectionIndicator.innerHTML = `
        <div class="section-dot active" data-title="Tentang Diri" data-section="0"></div>
        <div class="section-dot" data-title="Random" data-section="1"></div>
        <div class="section-dot" data-title="Tentang Blog" data-section="2"></div>
      `;
      document.body.appendChild(sectionIndicator);

      const horizontalContainer = document.querySelector('.horizontal-sections-container');
      const horizontalSections = gsap.utils.toArray('.horizontal-section');
      const descriptionSection = document.querySelector('.description-section');
      
      // Calculate total width for horizontal scroll
      const totalWidth = horizontalSections.length * 100; // 100vw per section

      // Set initial container width
      horizontalContainer.style.width = `${totalWidth}vw`;

      // Create the main horizontal scroll timeline with ULTRA FAST SPEED
      const horizontalTl = gsap.timeline({
        scrollTrigger: {
          trigger: '.horizontal-scroll-wrapper',
          start: 'top top',
          end: () => `+=${(totalWidth - 100) * window.innerWidth * 0.5}`, // Very short distance for ultra fast scroll
          scrub: 0.01, // Almost no scrub for immediate response
          pin: true,
          anticipatePin: 1,
          invalidateOnRefresh: true,
          onUpdate: (self) => {
            const progress = self.progress;
            
            // Update progress bar
            if (progressBar) {
              progressBar.style.width = `${progress * 100}%`;
            }
            
            // Update section indicator
            const currentSection = Math.floor(progress * (horizontalSections.length));
            document.querySelectorAll('.section-dot').forEach((dot, index) => {
              dot.classList.toggle('active', index === currentSection);
            });
          }
        }
      });

      // Animate horizontal scroll with ULTRA FAST SPEED
      horizontalTl.to(horizontalContainer, {
        x: () => -((horizontalSections.length - 1) * window.innerWidth),
        ease: 'none' // No easing for immediate response
      });

      // Add ULTRA FAST animations for each section
      horizontalSections.forEach((section, index) => {
        const blogCards = section.querySelectorAll('.blog-card-horizontal');
        const sectionHeader = section.querySelector('.section-header');
        
        // Section header animation - ULTRA FAST
        gsap.fromTo(sectionHeader, 
          {
            opacity: 0,
            y: 50
          },
          {
            opacity: 1,
            y: 0,
            duration: 0.3, // Ultra fast duration
            scrollTrigger: {
              trigger: section,
              containerAnimation: horizontalTl,
              start: 'left center',
              end: 'left center',
              toggleActions: 'play none none reverse'
            }
          }
        );

        // Blog cards animation with ULTRA FAST stagger
        gsap.fromTo(blogCards, 
          {
            opacity: 0,
            x: 100,
            scale: 0.8
          },
          {
            opacity: 1,
            x: 0,
            scale: 1,
            duration: 0.2, // Ultra fast
            stagger: 0.02, // Ultra fast stagger
            scrollTrigger: {
              trigger: section,
              containerAnimation: horizontalTl,
              start: 'left center',
              end: 'left center',
              toggleActions: 'play none none reverse'
            }
          }
        );

        // Add ULTRA FAST magnetic effect to cards
        blogCards.forEach(card => {
          card.addEventListener('mousemove', (e) => {
            const rect = card.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            const centerX = rect.width / 2;
            const centerY = rect.height / 2;
            
            const angleX = (y - centerY) / 25;
            const angleY = (centerX - x) / 25;
            
            gsap.to(card, {
              duration: 0.1, // Ultra fast magnetic effect
              rotateX: angleX,
              rotateY: angleY,
              transformPerspective: 1000,
              ease: 'power2.out'
            });
          });
          
          card.addEventListener('mouseleave', () => {
            gsap.to(card, {
              duration: 0.2, // Ultra fast return
              rotateX: 0,
              rotateY: 0,
              ease: 'power2.out'
            });
          });
        });
      });

      // Add ULTRA FAST animation for description section
      gsap.fromTo(descriptionSection,
        {
          opacity: 0,
          y: 100
        },
        {
          opacity: 1,
          y: 0,
          duration: 0.4, // Ultra fast
          scrollTrigger: {
            trigger: descriptionSection,
            start: 'top 80%',
            end: 'top 50%',
            toggleActions: 'play none none reverse'
          }
        }
      );

      // Add horizontal scroll effect to description text (each line)
      const descriptionTexts = document.querySelectorAll('.large-text');
      descriptionTexts.forEach((text, index) => {
        gsap.fromTo(text,
          {
            opacity: 0,
            x: 100
          },
          {
            opacity: 1,
            x: 0,
            duration: 0.3,
            delay: index * 0.1, // Fast stagger for each line
            scrollTrigger: {
              trigger: text,
              start: 'top 80%',
              end: 'top 50%',
              toggleActions: 'play none none reverse'
            }
          }
        );
      });

      // Section indicator click handler with FAST transition
      document.querySelectorAll('.section-dot').forEach((dot, index) => {
        dot.addEventListener('click', () => {
          if (index < horizontalSections.length) {
            const targetProgress = index / (horizontalSections.length - 1);
            
            gsap.to(horizontalTl, {
              progress: targetProgress,
              duration: 0.5, // Ultra fast transition
              ease: 'power2.inOut'
            });
          } else {
            // Scroll to description section
            gsap.to(window, {
              duration: 0.6, // Fast scroll
              scrollTo: descriptionSection,
              ease: 'power2.inOut'
            });
          }
        });
      });

      // Enable fast mouse wheel scrolling
      let scrollTimeout;
      const horizontalWrapper = document.querySelector('.horizontal-scroll-wrapper');
      
      if (horizontalWrapper) {
        horizontalWrapper.addEventListener('wheel', (e) => {
          e.preventDefault();
          
          // Clear any existing timeout
          if (scrollTimeout) clearTimeout(scrollTimeout);
          
          // Fast scroll with wheel
          const currentProgress = horizontalTl.scrollTrigger.progress;
          const scrollDirection = e.deltaY > 0 ? 1 : -1;
          const scrollAmount = 0.3; // Fast scroll amount
          
          const newProgress = Math.max(0, Math.min(1, currentProgress + (scrollDirection * scrollAmount)));
          
          gsap.to(horizontalTl, {
            progress: newProgress,
            duration: 0.3, // Very fast response
            ease: 'power2.out'
          });
          
          // Set timeout to prevent too many rapid updates
          scrollTimeout = setTimeout(() => {
            scrollTimeout = null;
          }, 50);
        }, { passive: false });
      }

      // Refresh ScrollTrigger on resize
      window.addEventListener('resize', () => {
        ScrollTrigger.refresh();
      });
    }
  });
</script>
