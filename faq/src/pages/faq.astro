---
import Layout from '../layouts/Layout.astro';
import FAQItem from '../components/FAQItem.astro';

// Data FAQ untuk memudahkan iterasi
const faqData = [
  {
    index: "1",
    icon: "🚀",
    question: "Apa itu Astro?",
    answer: "Astro adalah framework modern untuk membangun website statis dan hybrid yang super cepat. Astro memungkinkan developer menggunakan berbagai framework UI (seperti React, Vue, Svelte) dalam satu proyek."
  },
  {
    index: "2",
    icon: "📂",
    question: "Di mana letak gambar?",
    answer: "Gambar disimpan di folder /public/images. Contohnya di sini: /images/5.jpg. Pastikan untuk mengoptimalkan gambar sebelum menggunakannya di website untuk performa yang lebih baik."
  },
  {
    index: "3",
    icon: "🔗",
    question: "Apakah ada tautan ke luar?",
    answer: `Ya, berikut adalah beberapa tautan penting:
      <br><br>
      <a href="https://astro.build" target="_blank">📄 Dokumentasi Astro</a><br>
      <a href="https://github.com/withastro/astro" target="_blank">💻 GitHub Repository</a><br>
      <a href="https://astro.build/integrations/" target="_blank">🔌 Integrasi Astro</a>`
  },
  {
    index: "4",
    icon: "⚙️",
    question: "Bagaimana cara instalasi Astro?",
    answer: `Untuk menginstall Astro, Anda dapat menggunakan perintah berikut:
      <br><br>
      <code>npm create astro@latest</code>
      <br><br>
      Ikuti petunjuk di command line untuk menyelesaikan proses instalasi.`
  },
  {
    index: "5",
    icon: "🌐",
    question: "Apakah Astro mendukung SSR?",
    answer: "Ya, Astro mendukung Server-Side Rendering (SSR) melalui adapter. Anda dapat menambahkan SSR ke proyek Astro dengan menginstall adapter untuk deployment target Anda (seperti Netlify, Vercel, atau Node.js)."
  },
  {
    index: "6",
    icon: "📱",
    question: "Apakah Astro responsive?",
    answer: "Ya, Astro menghasilkan website yang fully responsive. Developer dapat dengan mudah membuat layout yang responsive dengan menggunakan CSS biasa atau framework CSS seperti Tailwind."
  }
];
---

<Layout title="FAQ | Astro Example" description="Halaman FAQ dengan animasi, gambar, dan icon." currentPage="faq">
  <div class="container">
    <main>
      <h1 class="page-title">❓ Frequently Asked Questions</h1>
      
      <div class="update-info">
        Last update: <span id="currentDate"></span>
      </div>

      <div class="image-container">
        <img src="/images/5.jpg" alt="Ilustrasi FAQ" class="faq-image" />
      </div>

      <div class="faq-container">
        {faqData.map((faq) => (
          <FAQItem 
            index={faq.index} 
            icon={faq.icon} 
            question={faq.question}
            answer={faq.answer}
          />
        ))}
      </div>
    </main>
  </div>
</Layout>

<style>
  body {
    background: #fff;
    color: #333;
    min-height: 100vh;
    padding: 0;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  
  .page-title {
    text-align: center;
    margin-bottom: 30px;
    font-size: 2.5rem;
    font-weight: 700;
    text-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    font-family: 'Montserrat', sans-serif;
    letter-spacing: 1px;
    color: #333;
  }
  
  .update-info {
    text-align: right;
    margin-bottom: 20px;
    font-size: 0.9rem;
    color: #666;
    font-style: italic;
  }
  
  .image-container {
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
  }
  
  .faq-image {
    max-width: 100%;
    height: auto;
    max-height: 400px;
    object-fit: contain;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    border: 1px solid #ddd;
  }
  
  .faq-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  
  /* Animasi Framer Motion */
  [data-framer] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  [data-framer].animated {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const now = new Date();
    const options = { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    };
    const dateTimeStr = now.toLocaleDateString('id-ID', options);
    document.getElementById('currentDate').textContent = dateTimeStr;

    // Animasi scroll (Framer Motion style)
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animated');
        }
      });
    }, observerOptions);

    document.querySelectorAll('[data-framer]').forEach(el => {
      observer.observe(el);
    });

    const image = document.querySelector('.faq-image');
    if (image) {
      image.style.opacity = '0';
      image.style.transform = 'scale(0.9)';
      image.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
      
      setTimeout(() => {
        image.style.opacity = '1';
        image.style.transform = 'scale(1)';
      }, 300);
    }

    const title = document.querySelector('.page-title');
    if (title) {
      title.style.opacity = '0';
      title.style.transform = 'translateY(-20px)';
      title.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
      
      setTimeout(() => {
        title.style.opacity = '1';
        title.style.transform = 'translateY(0)';
      }, 100);
    }
  });
</script>
