---
// faq.astro
import Layout from '../layouts/Layout.astro';
import FAQItem from '../components/FAQItem.astro';

// Data FAQ untuk memudahkan iterasi
const faqData = [
  {
    index: "1",
    icon: "🚀",
    question: "Apa itu Astro?",
    answer: "Astro adalah framework modern untuk membangun website statis dan hybrid yang super cepat. Astro memungkinkan developer menggunakan berbagai framework UI (seperti React, Vue, Svelte) dalam satu proyek."
  },
  {
    index: "2",
    icon: "📂",
    question: "Di mana letak gambar?",
    answer: "Gambar disimpan di folder /public/images. Contohnya di sini: /images/5.jpg. Pastikan untuk mengoptimalkan gambar sebelum menggunakannya di website untuk performa yang lebih baik."
  },
  {
    index: "3",
    icon: "🔗",
    question: "Apakah ada tautan ke luar?",
    answer: `Ya, berikut adalah beberapa tautan penting:
      <br><br>
      <a href="https://astro.build" target="_blank">📄 Dokumentasi Astro</a><br>
      <a href="https://github.com/withastro/astro" target="_blank">💻 GitHub Repository</a><br>
      <a href="https://astro.build/integrations/" target="_blank">🔌 Integrasi Astro</a>`
  },
  {
    index: "4",
    icon: "⚙️",
    question: "Bagaimana cara instalasi Astro?",
    answer: `Untuk menginstall Astro, Anda dapat menggunakan perintah berikut:
      <br><br>
      <code>npm create astro@latest</code>
      <br><br>
      Ikuti petunjuk di command line untuk menyelesaikan proses instalasi.`
  },
  {
    index: "5",
    icon: "🌐",
    question: "Apakah Astro mendukung SSR?",
    answer: "Ya, Astro mendukung Server-Side Rendering (SSR) melalui adapter. Anda dapat menambahkan SSR ke proyek Astro dengan menginstall adapter untuk deployment target Anda (seperti Netlify, Vercel, atau Node.js)."
  },
  {
    index: "6",
    icon: "📱",
    question: "Apakah Astro responsive?",
    answer: "Ya, Astro menghasilkan website yang fully responsive. Developer dapat dengan mudah membuat layout yang responsive dengan menggunakan CSS biasa atau framework CSS seperti Tailwind."
  }
];
---

<Layout title="FAQ | Astro Example" description="Halaman FAQ dengan animasi, gambar, dan icon." currentPage="faq">
  <div class="container mx-auto px-4 max-w-4xl py-8">
    <main class="space-y-8">
      <!-- Teks Berjalan (Marquee) dengan Typography dan Blok Warna -->
      <div class="marquee-container bg-gradient-to-r from-primary to-secondary py-3 rounded-lg shadow-lg">
        <div class="marquee-content text-white font-bold text-xl">
          ❓ Tanya Jawab Seputar Astro & Development Web • 🚀 Tips & Trik Terbaru • 📚 Sumber Belajar Terpercaya •
        </div>
      </div>
      
      <div class="text-center space-y-4">
        <h1 class="text-4xl font-bold font-montserrat bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          ❓ Frequently Asked Questions
        </h1>
        
        <div class="text-sm text-gray-600 italic">
          Last update: <span id="currentDate" class="font-semibold"></span>
        </div>
      </div>

      <div class="flex justify-center">
        <img src="/images/5.jpg" alt="Ilustrasi FAQ" class="faq-image rounded-xl shadow-lg border border-gray-200 w-full max-w-md" />
      </div>

      <div class="space-y-4">
        {faqData.map((faq, index) => (
          <div data-framer data-index={index}>
            <FAQItem 
              index={faq.index} 
              icon={faq.icon} 
              question={faq.question}
              answer={faq.answer}
            />
          </div>
        ))}
      </div>
    </main>
  </div>
</Layout>

<style>
  /* Import Google Fonts untuk typography yang lebih baik */
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&family=Poppins:wght@300;400;500;600;700&display=swap');
  
  body {
    background: #f8fafc;
    color: #334155;
    min-height: 100vh;
    font-family: 'Poppins', sans-serif;
  }

  /* Styling untuk teks berjalan */
  .marquee-container {
    overflow: hidden;
    position: relative;
    width: 100%;
  }
  
  .marquee-content {
    white-space: nowrap;
    display: inline-block;
    padding-left: 100%;
    animation: marquee 20s linear infinite;
  }
  
  @keyframes marquee {
    0% { transform: translateX(0); }
    100% { transform: translateX(-100%); }
  }
  
  /* Typography improvements */
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Montserrat', sans-serif;
    font-weight: 700;
  }
  
  /* Animasi Framer Motion */
  [data-framer] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  [data-framer].animated {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Container utilities */
  .container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
  }
  
  @media (min-width: 640px) {
    .container {
      max-width: 640px;
    }
  }
  
  @media (min-width: 768px) {
    .container {
      max-width: 768px;
    }
  }
  
  @media (min-width: 1024px) {
    .container {
      max-width: 1024px;
    }
  }
  
  @media (min-width: 1280px) {
    .container {
      max-width: 1280px;
    }
  }
  
  @media (min-width: 1536px) {
    .container {
      max-width: 1536px;
    }
  }
  
  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  
  .px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  .max-w-4xl {
    max-width: 56rem;
  }
  
  .py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  
  .space-y-8 > * + * {
    margin-top: 2rem;
  }
  
  .space-y-4 > * + * {
    margin-top: 1rem;
  }
  
  .text-center {
    text-align: center;
  }
  
  .bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }
  
  .from-primary {
    --tw-gradient-from: hsl(var(--p));
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, hsl(var(--p) / 0));
  }
  
  .to-secondary {
    --tw-gradient-to: hsl(var(--s));
  }
  
  .rounded-lg {
    border-radius: 0.5rem;
  }
  
  .text-white {
    color: white;
  }
  
  .font-bold {
    font-weight: 700;
  }
  
  .text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
  
  .text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  
  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }
  
  .text-transparent {
    color: transparent;
  }
  
  .from-blue-600 {
    --tw-gradient-from: #2563eb;
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(37 99 235 / 0));
  }
  
  .to-purple-600 {
    --tw-gradient-to: #9333ea;
  }
  
  .text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  
  .text-gray-600 {
    color: #4b5563;
  }
  
  .italic {
    font-style: italic;
  }
  
  .font-semibold {
    font-weight: 600;
  }
  
  .flex {
    display: flex;
  }
  
  .justify-center {
    justify-content: center;
  }
  
  .rounded-xl {
    border-radius: 0.75rem;
  }
  
  .shadow-lg {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
  
  .border {
    border-width: 1px;
    border-style: solid;
  }
  
  .border-gray-200 {
    border-color: #e5e7eb;
  }
  
  .w-full {
    width: 100%;
  }
  
  .max-w-md {
    max-width: 28rem;
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    .marquee-content {
      font-size: 1rem;
      animation-duration: 15s;
    }
    
    .container {
      padding: 1rem;
    }
    
    h1 {
      font-size: 2rem;
    }
    
    .py-8 {
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tanggal pembaruan
    const now = new Date();
    const options = { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    };
    const dateTimeStr = now.toLocaleDateString('id-ID', options);
    document.getElementById('currentDate').textContent = dateTimeStr;

    // Animasi scroll dengan Intersection Observer
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animated');
          
          // Gunakan Framer Motion jika tersedia
          if (window.framerMotion) {
            const index = entry.target.getAttribute('data-index');
            framerMotion.animate(entry.target, {
              opacity: 1,
              y: 0,
              transition: { duration: 0.6, delay: index * 0.1 }
            });
          }
        }
      });
    }, observerOptions);

    document.querySelectorAll('[data-framer]').forEach(el => {
      observer.observe(el);
    });

    // Animasi gambar dengan Framer Motion jika tersedia
    const image = document.querySelector('.faq-image');
    if (image) {
      if (window.framerMotion) {
        framerMotion.animate(image, {
          opacity: 1,
          scale: 1,
          transition: { duration: 0.8, delay: 0.3 }
        });
      } else {
        image.style.opacity = '0';
        image.style.transform = 'scale(0.9)';
        image.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
        
        setTimeout(() => {
          image.style.opacity = '1';
          image.style.transform = 'scale(1)';
        }, 300);
      }
    }

    // Animasi judul dengan Framer Motion jika tersedia
    const title = document.querySelector('h1');
    if (title) {
      if (window.framerMotion) {
        framerMotion.animate(title, {
          opacity: 1,
          y: 0,
          transition: { duration: 0.8, delay: 0.1 }
        });
      } else {
        title.style.opacity = '0';
        title.style.transform = 'translateY(-20px)';
        title.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
        
        setTimeout(() => {
          title.style.opacity = '1';
          title.style.transform = 'translateY(0)';
        }, 100);
      }
    }
  });
</script>
