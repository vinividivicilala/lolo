---
// faq.astro
import Layout from '../layouts/Layout.astro';
import FAQItem from '../components/FAQItem.astro';

// Ambil path URL sekarang
const path = Astro.url.pathname;                 // misal: "/faq/blog"
const segments = path.split("/").filter(Boolean); // ["faq","blog"]

function formatSegment(seg) {
  return seg.charAt(0).toUpperCase() + seg.slice(1);
}





// Data FAQ
const faqData = [
  {
    id: 1,
    index: "1",
    icon: "üöÄ",
    question: "Apa itu Astro?",
    answer: "Astro adalah framework modern untuk membangun website statis dan hybrid yang super cepat. Astro memungkinkan developer menggunakan berbagai framework UI (seperti React, Vue, Svelte) dalam satu proyek.",
    fullDescription: "Astro adalah framework web all-in-one yang dirancang untuk membuat website yang cepat dan efisien. Dibangun dengan konsep 'island architecture', Astro memungkinkan Anda menggunakan komponen dari berbagai framework UI (React, Vue, Svelte, dll) dalam satu proyek, sambil tetap menghasilkan HTML statis yang optimal. Astro juga mendukung server-side rendering (SSR) melalui adapter, memberikan fleksibilitas dalam deployment.",
    category: "Pengenalan",
    lastUpdated: "15 November 2023, 14:30 WIB",
    isNew: true,
    labelColor: "blue",
    topic: "Dasar-Dasar Astro"
  },
  {
    id: 2,
    index: "2",
    icon: "üìÇ",
    question: "Di mana letak gambar?",
    answer: "Gambar disimpan di folder /public/images. Contohnya di sini: /images/5.jpg. Pastikan untuk mengoptimalkan gambar sebelum menggunakannya di website untuk performa yang lebih baik.",
    fullDescription: "Dalam proyek Astro, semua aset statis seperti gambar, font, dan file lainnya disimpan dalam folder /public. Folder ini secara langsung dipetakan ke root website Anda. Untuk gambar, disarankan menyimpannya di /public/images. Sebelum menggunakan gambar, pastikan untuk mengoptimalkannya dengan kompresi dan format yang tepat (WebP untuk browser modern, JPEG/PNG untuk kompatibilitas) untuk meningkatkan performa loading website.",
    category: "Struktur Proyek",
    lastUpdated: "12 November 2023, 09:15 WIB",
    isNew: true,
    labelColor: "green",
    topic: "Dasar-Dasar Astro"
  },
  {
    id: 3,
    index: "3",
    icon: "üîó",
    question: "Apakah ada tautan ke luar?",
    answer: `Ya, berikut adalah beberapa tautan penting:`,
    fullDescription: `Website ini menyediakan berbagai tautan eksternal yang berguna untuk pengembangan dengan Astro. Tautan-tautan tersebut termasuk:
      ‚Ä¢ Dokumentasi resmi Astro - sumber informasi terlengkap tentang semua fitur Astro
      ‚Ä¢ Repository GitHub - tempat Anda dapat berkontribusi atau melaporkan issues
      ‚Ä¢ Halaman integrasi - menampilkan semua plugin dan adapter yang tersedia
      ‚Ä¢ Komunitas Discord - tempat berinteraksi dengan developer Astro lainnya
      ‚Ä¢ Blog Astro - tutorial dan pengumuman terbaru`,
    category: "Sumber Daya",
    lastUpdated: "10 November 2023, 16:45 WIB",
    isNew: true,
    labelColor: "purple",
    topic: "Sumber Daya"
  },
  {
    id: 4,
    index: "4",
    icon: "‚öôÔ∏è",
    question: "Bagaimana cara instalasi Astro?",
    answer: `Untuk menginstall Astro, Anda dapat menggunakan perintah berikut:`,
    fullDescription: `Instalasi Astro sangat mudah dan dapat dilakukan dalam beberapa langkah:
      1. Pastikan Anda telah menginstall Node.js versi 16 atau lebih tinggi
      2. Jalankan perintah: npm create astro@latest
      3. Ikuti prompt yang muncul untuk mengkonfigurasi proyek
      4. Masuk ke direktori proyek: cd nama-proyek-anda
      5. Install dependencies: npm install
      6. Jalankan server development: npm run dev
      Anda juga dapat membuat proyek Astro dengan template tertentu menggunakan perintah:
      npm create astro@latest -- --template nama-template
      Beberapa template populer termasuk blog, dokumentasi, dan portfolio.`,
    category: "Instalasi",
    lastUpdated: "8 November 2023, 11:20 WIB",
    isNew: true,
    labelColor: "orange",
    topic: "Instalasi & Setup"
  },
  {
    id: 5,
    index: "5",
    icon: "üåê",
    question: "Apakah Astro mendukung SSR?",
    answer: "Ya, Astro mendukung Server-Side Rendering (SSR) melalui adapter. Anda dapat menambahkan SSR ke proyek Astro dengan menginstall adapter untuk deployment target Anda (seperti Netlify, Vercel, atau Node.js).",
    fullDescription: `Astro memang mendukung Server-Side Rendering (SSR) melalui sistem adapter. Fitur ini memungkinkan Anda untuk:
      ‚Ä¢ Menghalaman konten dinamis pada server
      ‚Ä¢ Mengimplementasikan API routes
      ‚Ä¢ Menangani autentikasi pengguna
      ‚Ä¢ Mengelola data real-time
      Untuk mengaktifkan SSR, Anda perlu menginstall adapter yang sesuai dengan platform deployment Anda. Beberapa adapter yang tersedia:
      ‚Ä¢ @astrojs/netlify - untuk deploy ke Netlify
      ‚Ä¢ @astrojs/vercel - untuk deploy ke Vercel
      ‚Ä¢ @astrojs/node - untuk deploy ke lingkungan Node.js
      ‚Ä¢ @astrojs/cloudflare - untuk deploy ke Cloudflare Pages
      Setelah menginstall adapter, Anda perlu mengkonfigurasinya dalam file astro.config.mjs.`,
    category: "Fitur",
    lastUpdated: "5 November 2023, 13:10 WIB",
    isNew: true,
    labelColor: "red",
    topic: "Fitur Lanjutan"
  },
  {
    id: 6,
    index: "6",
    icon: "üì±",
    question: "Apakah Astro responsive?",
    answer: "Ya, Astro menghasilkan website yang fully responsive. Developer dapat dengan mudah membuat layout yang responsive dengan menggunakan CSS biasa atau framework CSS seperti Tailwind.",
    fullDescription: `Astro sendiri tidak menentukan bagaimana Anda membuat website responsive - itu sepenuhnya tergantung pada implementasi CSS Anda. Namun, Astro memberikan kebebasan penuh untuk menggunakan:
      ‚Ä¢ CSS vanilla dengan media queries
      ‚Ä¢ Framework CSS seperti Tailwind, Bootstrap, atau Bulma
      ‚Ä¢ CSS-in-JS libraries seperti styled-components
      ‚Ä¢ CSS modules untuk scoped styling
      Karena Astro menghasilkan HTML statis, performa website biasanya sangat baik untuk perangkat mobile. You dapat dengan mudah mengimplementasikan responsive design patterns seperti:
      ‚Ä¢ Mobile-first design
      ‚Ä¢ Flexible grid layouts
      ‚Ä¢ Responsive images dengan elemen picture atau srcset
      ‚Ä¢ Conditional loading komponen berdasarkan breakpoint
      Astro juga mendukung pengelolaan asset yang cerdas, termasuk generating responsive images pada build time.`,
    category: "Responsivitas",
    lastUpdated: "3 November 2023, 17:30 WIB",
    isNew: false,
    labelColor: "",
    topic: "Fitur Lanjutan"
  }
];
---

<Layout title="FAQ | Astro Example" description="Halaman FAQ dengan animasi, gambar, dan icon." currentPage="faq">
  <div class="container">


     <!-- Breadcrumb Dinamis -->
    <nav class="breadcrumb">
      <a href="/">Home</a>
      {segments.map((seg, i) => {
        const link = "/" + segments.slice(0, i + 1).join("/");
        const isLast = i === segments.length - 1;
        return isLast ? (
          <span class="active">{formatSegment(seg)}</span>
        ) : (
          <a href={link}>{formatSegment(seg)}</a>
        );
      })}
    </nav>

    <main class="main-content">
      <!-- Ganti marquee dengan banner animasi baru -->
<div class="development-banner" id="devBanner">
  <div class="banner-content">
    <span class="banner-icon">üöß</span>
    <span class="banner-text">WEBSITE MASIH DIKEMBANGKAN</span>
    <button class="banner-info-btn" onclick="openDevModal()">‚ÑπÔ∏è</button>
  </div>
</div>



    <!-- Layout Typografi Kiri - Diperbarui -->
<div class="typography-left-layout">
  <div class="title-section">
    <div class="title-accent">QUESTIONS</div>
    <h1 class="page-title animate-typing">
      FREQUENTLY<br>ASKED
    </h1>
    <div class="title-line"></div>
  </div>
  <div class="description-section">
    <p class="typography-description animate-fade-in">
      Eksplorasi lengkap seputar Astro dan pengembangan web modern. 
      Temukan jawaban atas pertanyaan paling umum yang diajukan oleh developer.
    </p>
    <div class="update-info">
      LAST UPDATE: <span id="currentDate"></span>
    </div>
  </div>
</div>


 <!-- Related FAQ otomatis -->
  <div class="related-faq-header">
    <h2 class="related-faq-title">RELATED FAQ</h2>
    <div class="related-faq-line"></div>
  </div>

  <!-- Loop otomatis semua topic -->
  <div class="faq-topics">
    {
      [...new Set(faqData.map(faq => faq.topic))].map((topicName) => (
        <div class="faq-topic-group" id={topicName.replace(/\s+/g, '-').toLowerCase()}>
          <div class="topic-header">
            <h2 class="topic-title">{topicName}</h2>
            <div class="topic-line"></div>
          </div>
          <div class="faq-items">
            {faqData.filter(f => f.topic === topicName).map((faq, index) => (
              <div class="faq-item-wrapper linebox" data-faq-id={faq.id}>
                <div class="faq-title-box">
                  <span class="faq-index">{faq.index}.</span>
                  <span class="faq-question">{faq.question}</span>
                </div>
                <FAQItem 
                  index={faq.index}
                  icon={faq.icon}
                  question={faq.question}
                  answer={faq.answer}
                />
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>


      <div class="divider-line"></div>

      <!-- Grup FAQ -->
      <div class="faq-topics">
        <!-- Topik 1: Dasar-Dasar Astro -->
        <div class="faq-topic-group">
          <div class="topic-header">
            <h2 class="topic-title">DASAR-DASAR ASTRO</h2>
            <div class="topic-line"></div>
          </div>
          <div class="faq-items">
            {faqData.filter(faq => faq.topic === "Dasar-Dasar Astro").map((faq, index) => (
              <div data-framer data-index={index} class="faq-item-wrapper" data-faq-id={faq.id}>
                {faq.isNew && (
                  <div class={`new-label ${faq.labelColor}`}>
                    <span class="new-label-text">BARU</span>
                  </div>
                )}
                <FAQItem 
                  index={faq.index} 
                  icon={faq.icon} 
                  question={faq.question}
                  answer={faq.answer}
                />
              </div>
            ))}
          </div>
        </div>

        <!-- Garis Pembatas -->
        <div class="divider-line"></div>

        <!-- Topik 2: Sumber Daya -->
        <div class="faq-topic-group">
          <div class="topic-header">
            <h2 class="topic-title">SUMBER DAYA</h2>
            <div class="topic-line"></div>
          </div>
          <div class="faq-items">
            {faqData.filter(faq => faq.topic === "Sumber Daya").map((faq, index) => (
              <div data-framer data-index={index} class="faq-item-wrapper" data-faq-id={faq.id}>
                {faq.isNew && (
                  <div class={`new-label ${faq.labelColor}`}>
                    <span class="new-label-text">BARU</span>
                  </div>
                )}
                <FAQItem 
                  index={faq.index} 
                  icon={faq.icon} 
                  question={faq.question}
                  answer={faq.answer}
                />
              </div>
            ))}
          </div>
        </div>

        <!-- Garis Pembatas -->
        <div class="divider-line"></div>

        <!-- Topik 3: Instalasi & Setup -->
        <div class="faq-topic-group">
          <div class="topic-header">
            <h2 class="topic-title">INSTALASI & SETUP</h2>
            <div class="topic-line"></div>
          </div>
          <div class="faq-items">
            {faqData.filter(faq => faq.topic === "Instalasi & Setup").map((faq, index) => (
              <div data-framer data-index={index} class="faq-item-wrapper" data-faq-id={faq.id}>
                {faq.isNew && (
                  <div class={`new-label ${faq.labelColor}`}>
                    <span class="new-label-text">BARU</span>
                  </div>
                )}
                <FAQItem 
                  index={faq.index} 
                  icon={faq.icon} 
                  question={faq.question}
                  answer={faq.answer}
                />
              </div>
            ))}
          </div>
        </div>

        <!-- Garis Pembatas -->
        <div class="divider-line"></div>

        <!-- Topik 4: Fitur Lanjutan -->
        <div class="faq-topic-group">
          <div class="topic-header">
            <h2 class="topic-title">FITUR LANJUTAN</h2>
            <div class="topic-line"></div>
          </div>
          <div class="faq-items">
            {faqData.filter(faq => faq.topic === "Fitur Lanjutan").map((faq, index) => (
              <div data-framer data-index={index} class="faq-item-wrapper" data-faq-id={faq.id}>
                {faq.isNew && (
                  <div class={`new-label ${faq.labelColor}`}>
                    <span class="new-label-text">BARU</span>
                  </div>
                )}
                <FAQItem 
                  index={faq.index} 
                  icon={faq.icon} 
                  question={faq.question}
                  answer={faq.answer}
                />
              </div>
            ))}
          </div>
        </div>
      </div>
    </main>
  </div>

<!-- Blok Warna Besar - Revisi Final -->
<div class="color-block-full">
  <div class="color-block-grid">
    <!-- Kolom Kiri: Judul -->
    <div class="color-block-left">
      <h2 class="title-left">STILL HAVE QUESTIONS?</h2>
    </div>
    <!-- Kolom Kanan: Deskripsi -->
    <div class="color-block-right">
      <p class="description-right">
        Jangan ragu untuk menghubungi kami melalui email atau media sosial. 
        Tim support kami siap membantu Anda dengan segala pertanyaan terkait Astro dan pengembangan web.
      </p>
    </div>
  </div>
  <!-- Tombol di Tengah -->
  <div class="cta-center">
    <a href="#" class="cta-button-large" id="contactBtn">CONTACT US NOW</a>
  </div>
</div>

<!-- Modal Timeline Website -->
<div id="timelineModal" class="modal">
  <div class="modal-content large-modal">
    <span class="close">&times;</span>
    <div id="timelineContent"></div>
  </div>
</div>




<!-- Kontak Media Sosial -->
<div class="social-contact-section">
  <div class="social-contact-container">
    <div class="social-contact-header">
      <!-- Judul Contact kiri -->
      <h2 class="social-contact-title">CONTACT</h2>

      <!-- Ikon + Nama medsos kanan -->
      <div class="social-icons-row">
        <a href="#" class="social-icon-row">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/facebook.svg" alt="Facebook" class="icon-img"/>
          <span class="social-name">Facebook</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M5 12h14M12 5l7 7-7 7"/>
          </svg>
        </a>
        <a href="#" class="social-icon-row">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/instagram.svg" alt="Instagram" class="icon-img"/>
          <span class="social-name">Instagram</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M5 12h14M12 5l7 7-7 7"/>
          </svg>
        </a>
        <a href="#" class="social-icon-row">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/x.svg" alt="Twitter" class="icon-img"/>
          <span class="social-name">Twitter</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M5 12h14M12 5l7 7-7 7"/>
          </svg>
        </a>
        <a href="#" class="social-icon-row">
          <img src="https://cdn.jsdelivr.net/npm/simple-icons@v9/icons/linkedin.svg" alt="LinkedIn" class="icon-img"/>
          <span class="social-name">LinkedIn</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M5 12h14M12 5l7 7-7 7"/>
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Virtual Asisten (Diubah: dipindahkan ke sebelah kiri) -->
<div class="assistant-toggle" style="left: 25px; right: auto; bottom: 25px; align-items: flex-start;">
  <div class="toggle-wrapper">
    <button id="msgToggleBtn" class="msg-btn">üí¨</button>
    <span id="msgCount" class="msg-count">0</span>
  </div>

  <!-- Preview pesan terakhir -->
  <div id="lastMsgPreview" class="last-msg hidden"></div>

  <!-- Box Chat -->
  <div id="msgBox" class="msg-box hidden">
    <!-- Header -->
    <div class="linebox header-box">
      <img src="/images/5.jpg" alt="Asisten" class="asst-fp"/>
      <div>
        <div class="asst-name">Asisten Virtual</div>
        <div class="asst-desc">Siap membantu ‚ú®</div>
      </div>
  <div class="header-actions">
    <button id="themeToggle" class="theme-btn">üåô</button>
    <button id="closeBtn" class="close-btn">‚ùå</button>
  </div>
</div>

    <!-- Area Riwayat Pesan -->
    <div id="chatArea" class="chat-area"></div>

    <!-- Form Input -->
    <form id="msgForm" class="msg-input">
      <input type="text" id="msgName" placeholder="Nama kamu..." required />
      <input type="text" id="msgDesc" placeholder="Tulis pesan..." required />
      <button type="submit" class="send-btn">
        <svg xmlns="http://www.w3.org/2000/svg" class="send-icon" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2">
          <path d="M22 2L11 13"/>
          <path d="M22 2L15 22L11 13L2 9L22 2Z"/>
        </svg>
      </button>
    </form>
  </div>
</div>


<!-- Tambahkan kode ini sebelum penutup </body> -->
<div class="timeline-scrollbar-container">
  <div class="timeline-linebox">
    <div class="timeline-track">
      <div class="timeline-progress"></div>
    </div>
    <div class="timeline-markers">
      <div class="timeline-marker" data-target="breadcrumb">
        <div class="marker-dot"></div>
        <span class="marker-label">Home</span>
      </div>
      <div class="timeline-marker" data-target="main-title">
        <div class="marker-dot"></div>
        <span class="marker-label">FAQ</span>
      </div>
      <div class="timeline-marker" data-target="dasar-dasar">
        <div class="marker-dot"></div>
        <span class="marker-label">Dasar</span>
      </div>
      <div class="timeline-marker" data-target="sumber-daya">
        <div class="marker-dot"></div>
        <span class="marker-label">Sumber Daya</span>
      </div>
      <div class="timeline-marker" data-target="instalasi-setup">
        <div class="marker-dot"></div>
        <span class="marker-label">Instalasi</span>
      </div>
      <div class="timeline-marker" data-target="fitur-lanjutan">
        <div class="marker-dot"></div>
        <span class="marker-label">Fitur</span>
      </div>
      <div class="timeline-marker" data-target="contact-block">
        <div class="marker-dot"></div>
        <span class="marker-label">Contact</span>
      </div>
      <div class="timeline-marker" data-target="footer">
        <div class="marker-dot"></div>
        <span class="marker-label">Footer</span>
      </div>
    </div>
  </div>
</div>


<!-- Modal untuk informasi pengembangan website -->
<div id="devModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeDevModal()">&times;</span>
    <div class="modal-box">
      <h2>Status Pengembangan Website</h2>
    </div>
    
    <div class="modal-box">
      <div class="info-grid">
        <div class="info-item">
          <span class="info-label">Tanggal Mulai</span>
          <span class="info-value">15 November 2023</span>
        </div>
        <div class="info-item">
          <span class="info-label">Update Terakhir</span>
          <span class="info-value" id="lastUpdateValue">20 November 2023</span>
        </div>
        <div class="info-item">
          <span class="info-label">Versi</span>
          <span class="info-value">1.2.0-beta</span>
        </div>
        <div class="info-item">
          <span class="info-label">Status</span>
          <span class="info-value status-active">Dalam Pengembangan</span>
        </div>
      </div>
    </div>
    
    <div class="modal-box">
      <h3>Deskripsi</h3>
      <p>Website ini sedang dalam tahap pengembangan aktif. Beberapa fitur mungkin belum berfungsi dengan sempurna atau masih dalam tahap penyempurnaan. Terima kasih atas pengertiannya.</p>
    </div>
  </div>
</div>







  <!-- Footer -->
  <footer class="footer-section">
    <div class="footer-container">
      <div class="footer-content">
        <div class="footer-left">
          <div class="development-notice">
            <span class="notice-icon">üöß</span>
            <span class="notice-text">Website ini masih dikembangkan</span>
          </div>
        </div>
        <div class="footer-right">
          <div class="footer-links">
            <a href="/privacy-policy" class="footer-link">Kebijakan Privasi</a>
            <a href="/terms" class="footer-link">Syarat & Ketentuan</a>
            <a href="/feedback" class="footer-link">Berikan Masukan</a>
          </div>

<a href="/available" class="available-box">
  <span class="status-dot"></span>
  <span class="status-text">AVAILABLE FOR WORK</span>
</a>





          <div class="copyright">
            &copy; 2023 Astro Example. All rights reserved.
          </div>
        </div>
      </div>
    </div>
  </footer>





  <!-- Modal untuk Detail FAQ -->
  <div id="faqModal" class="modal">
    <div class="modal-content large-modal">
      <span class="close">&times;</span>
      <div id="modalContent"></div>
<!-- Modal Feedback: Apakah kamu menyukai FAQ ini? -->
<div class="modal-feedback" role="region" aria-label="Feedback FAQ">
  <h3 class="feedback-title">Apakah kamu menyukai FAQ ini?</h3>

  <div class="feedback-buttons" role="toolbar" aria-label="Feedback buttons">
    <!-- Like -->
    <button id="faqLikeBtn" class="feedback-btn" aria-pressed="false" aria-label="Suka">
      <svg viewBox="0 0 24 24" class="icon icon-like" width="36" height="36" aria-hidden="true">
        <path class="icon-stroke" d="M14 9V5a3 3 0 0 0-3-3 1 1 0 0 0-.95.68L8 7H5a1 1 0 0 0-1 1v7a2 2 0 0 0 2 2h8a3 3 0 0 0 3-3v-4a2 2 0 0 0-3-2z" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/>
        <path class="icon-fill" d="M14 9V5a3 3 0 0 0-3-3 1 1 0 0 0-.95.68L8 7H5a1 1 0 0 0-1 1v7a2 2 0 0 0 2 2h8a3 3 0 0 0 3-3v-4a2 2 0 0 0-3-2z" fill="currentColor" fill-opacity="0"/>
      </svg>
      <span id="likeCount" class="count-label">0</span>
    </button>

    <!-- Dislike -->
    <button id="faqDislikeBtn" class="feedback-btn" aria-pressed="false" aria-label="Tidak suka">
      <svg viewBox="0 0 24 24" class="icon icon-dislike" width="36" height="36" aria-hidden="true">
        <path class="icon-stroke" d="M10 15v4a3 3 0 0 0 3 3 1 1 0 0 0 .95-.68L16 17h3a1 1 0 0 0 1-1v-7a2 2 0 0 0-2-2H10a3 3 0 0 0-3 3v4a2 2 0 0 0 3 2z" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/>
        <path class="icon-fill" d="M10 15v4a3 3 0 0 0 3 3 1 1 0 0 0 .95-.68L16 17h3a1 1 0 0 0 1-1v-7a2 2 0 0 0-2-2H10a3 3 0 0 0-3 3v4a2 2 0 0 0 3 2z" fill="currentColor" fill-opacity="0"/>
      </svg>
    <span id="dislikeCount" class="count-label">0</span>
    </button>
  </div>
</div>

    </div>
  </div>
</Layout>

<style>
  /* Import Google Fonts */
  @import url('https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');
  body, .page-title, .update-info, 
  .typography-description, .color-block-extra-large h2, 
  .color-block-extra-large p, .cta-button-large, .title-accent {
    font-family: 'Space Mono', monospace !important;
  }


/* Box putih di dalam bg hitam */
.available-box {
  display: inline-flex;
  align-items: center;
  gap: 12px;
  border: 2px solid rgba(255, 255, 255, 0.8);
  padding: 12px 24px;
  border-radius: 8px;
  background: transparent;
  margin-top: 30px;
  animation: pulseBox 3s infinite;
}

/* Teks */
.available-box .status-text {
  font-size: 1.2rem;
  font-weight: 700;
  color: #fff;
  letter-spacing: 1px;
}

/* Dot biru kedap-kedip */
.status-dot {
  width: 14px;
  height: 14px;
  border-radius: 50%;
  background: #3b82f6;
  box-shadow: 0 0 0 0 rgba(59,130,246, 0.8);
  animation: pulseDot 1.5s infinite;
}

/* Animasi dot */
@keyframes pulseDot {
  0% { transform: scale(0.9); box-shadow: 0 0 0 0 rgba(59,130,246, 0.7); }
  70% { transform: scale(1.2); box-shadow: 0 0 0 12px rgba(59,130,246, 0); }
  100% { transform: scale(0.9); box-shadow: 0 0 0 0 rgba(59,130,246, 0); }
}

/* Animasi box */
@keyframes pulseBox {
  0%, 100% { border-color: rgba(255,255,255,0.8); }
  50% { border-color: rgba(59,130,246,0.9); }
}




  /* Timeline Scroll Bar Styles */
  .timeline-scrollbar-container {
    position: fixed;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1000;
    height: 70vh;
  }
  
  .timeline-linebox {
    position: relative;
    height: 100%;
    padding: 0 15px;
    border: 2px solid rgba(0, 0, 0, 0.7);
    background: rgba(255, 255, 255, 0.9);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  .timeline-track {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 100%;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 2px;
  }
  
  .timeline-progress {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0%;
    background: #000;
    border-radius: 2px;
    transition: height 0.2s ease-out;
  }
  
  .timeline-markers {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    padding: 10px 0;
  }
  
  .timeline-marker {
    position: relative;
    display: flex;
    align-items: center;
    margin: 8px 0;
    cursor: pointer;
    z-index: 2;
  }
  
  .marker-dot {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: #fff;
    border: 2px solid rgba(0, 0, 0, 0.5);
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
  
  .timeline-marker.active .marker-dot {
    background: #000;
    border-color: #000;
    transform: scale(1.3);
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.2);
  }
  
  .marker-label {
    position: absolute;
    right: 25px;
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s ease;
    font-size: 0.8rem;
    font-weight: 700;
    color: #000;
    white-space: nowrap;
    background: rgba(255, 255, 255, 0.9);
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.2);
  }
  
  .timeline-marker:hover .marker-label,
  .timeline-marker.active .marker-label {
    opacity: 1;
    transform: translateX(0);
  }
  
  /* Responsive */
  @media (max-width: 968px) {
    .timeline-scrollbar-container {
      right: 10px;
    }
    
    .marker-label {
      font-size: 0.7rem;
    }
  }
  
  @media (max-width: 768px) {
    .timeline-scrollbar-container {
      display: none;
    }
  }


.related-faq-header {
  text-align: center;
  margin: 50px 0 30px;
}

.related-faq-title {
  font-size: 2rem;
  font-weight: 700;
  color: #000;
  text-transform: uppercase;
  padding: 12px 24px;
  border: 2px solid #000; /* linebox hitam */
  display: inline-block;
  border-radius: 6px;
  background: #fff;
}

.related-faq-line {
  height: 3px;
  width: 80px;
  background: #000;
  margin: 15px auto 0;
}

.faq-item-wrapper.linebox {
  border: 2px solid #000;  /* linebox hitam */
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 25px;
  background: #fff;
}

.faq-title-box {
  display: flex;
  align-items: center;
  gap: 10px;
  font-weight: 700;
  margin-bottom: 10px;
}

.faq-question {
  font-size: 1.1rem;
}



/* Modal feedback */
.modal-feedback {
  margin-top: 18px;
  padding: 18px 22px;
  border-top: 1px solid rgba(0,0,0,0.08);
  text-align: center;
  background: transparent;
}

.feedback-title {
  font-size: 1.05rem;
  font-weight: 700;
  margin-bottom: 12px;
  color: #000;
}

/* tombol */
.feedback-buttons {
  display: inline-flex;
  gap: 18px;
  align-items: center;
  justify-content: center;
}

.feedback-btn {
  background: transparent;
  border: 2px solid rgba(0,0,0,0.12);
  padding: 8px;
  border-radius: 10px;
  cursor: pointer;
  transition: transform 180ms ease, box-shadow 180ms ease, border-color 180ms;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 64px;
  height: 52px;
}

.feedback-btn:focus {
  outline: none;
  box-shadow: 0 6px 18px rgba(0,0,0,0.08);
  transform: translateY(-3px);
  border-color: rgba(0,0,0,0.24);
}

/* SVG base */
.icon {
  display: block;
}

/* stroke (outline) */
.icon-stroke {
  stroke: #111827;
  transition: stroke 200ms ease;
}

/* fill path initially transparent */
.icon-fill {
  transition: fill-opacity 300ms ease, transform 280ms cubic-bezier(.2,.9,.3,1);
  transform-origin: center;
  transform-box: fill-box;
  /* initial: invisible */
  fill-opacity: 0;
  fill: currentColor;
}

/* When selected, add filled color + pop animation */
.feedback-btn.selected .icon-fill {
  fill-opacity: 1;
  transform: scale(1.02);
}

/* Different colors for like/dislike */
#faqLikeBtn.selected { color: #10b981; border-color: rgba(16,185,129,0.2); box-shadow: 0 8px 24px rgba(16,185,129,0.06); }
#faqDislikeBtn.selected { color: #ef4444; border-color: rgba(239,68,68,0.16); box-shadow: 0 8px 24px rgba(239,68,68,0.06); }

/* Subtle pop keyframe (used by JS when toggling for one-shot) */
@keyframes popFill {
  0%   { transform: scale(0.92); }
  60%  { transform: scale(1.08); }
  100% { transform: scale(1.02); }
}

/* small hover effect for non-selected */
.feedback-btn:not(.selected):hover .icon-stroke { stroke: #000; transform: translateY(-2px); }

.count-label {
  font-size: 0.9rem;
  font-weight: 700;
  margin-left: 6px;
  color: #333;
}


/* Banner Development */
.development-banner {
  background: linear-gradient(90deg, #3b82f6, #2563eb, #1d4ed8);
  color: white;
  padding: 16px 0;
  text-align: center;
  position: relative;
  overflow: hidden;
  margin-bottom: 40px;
  animation: pulseBanner 3s infinite;
}

.banner-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.banner-icon {
  font-size: 1.5rem;
  animation: bounce 2s infinite;
}

.banner-text {
  font-weight: 700;
  font-size: 1.2rem;
  letter-spacing: 1px;
}

.banner-info-btn {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  cursor: pointer;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.3s;
}

.banner-info-btn:hover {
  background: rgba(255, 255, 255, 0.3);
}

/* Animasi Typography */
.animate-typing {
  overflow: hidden;
  border-right: 3px solid #3b82f6;
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

.animate-fade-in {
  opacity: 0;
  animation: fadeIn 2s forwards;
  animation-delay: 1s;
}

/* Info Grid dalam Modal */
.info-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
}

.info-item {
  display: flex;
  flex-direction: column;
  padding: 15px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  background: #f8fafc;
}

.info-label {
  font-size: 0.9rem;
  color: #64748b;
  margin-bottom: 5px;
}

.info-value {
  font-weight: 700;
  color: #000;
}

.status-active {
  color: #10b981 !important;
}

/* Animations */
@keyframes pulseBanner {
  0% { opacity: 0.9; }
  50% { opacity: 1; }
  100% { opacity: 0.9; }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
  40% {transform: translateY(-10px);}
  60% {transform: translateY(-5px);}
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: #3b82f6 }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}







  body {
    background: #f8fafc;
    color: #334155;
    min-height: 100vh;
    margin: 0;
    padding: 0;
  }


  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .main-content {
    padding: 40px 0;
  }

 

  /* Typography Left Layout */
  .typography-left-layout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: start;
    margin-bottom: 60px;
  }

  .title-section {
    text-align: left;
  }

  .title-accent {
    font-size: 1.2rem;
    font-weight: 700;
    color: #3b82f6;
    text-transform: uppercase;
    letter-spacing: 3px;
    margin-bottom: 15px;
  }

  .page-title {
    font-size: 4.5rem;
    font-weight: 700;
    color: #000;
    margin: 0 0 20px 0;
    text-transform: uppercase;
    letter-spacing: -2px;
    line-height: 1.1;
    text-align: left;
  }

  .title-line {
    width: 100px;
    height: 4px;
    background: #3b82f6;
    margin: 20px 0;
  }

  .description-section {
    text-align: left;
    padding-top: 20px;
  }

  .typography-description {
    font-size: 1.3rem;
    line-height: 1.6;
    color: #334155;
    margin-bottom: 30px;
  }

  .update-info {
    color: #64748b;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .image-container {
    display: flex;
    justify-content: center;
    margin-bottom: 60px;
  }

  .faq-image {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    border: 1px solid #e2e8f0;
  }

  .divider-line {
    height: 1px;
    background: rgba(0, 0, 0, 0.1);
    margin: 40px 0;
    width: 100%;
  }

  /* FAQ Topics */
  .faq-topics {
    margin-bottom: 60px;
  }

  .faq-topic-group {
    margin-bottom: 50px;
  }

  .topic-header {
    margin-bottom: 30px;
    text-align: center;
  }

  .topic-title {
    font-size: 1.8rem;
    font-weight: 700;
    color: #000;
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-bottom: 15px;
    padding: 15px 30px;
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    display: inline-block;
    background: #f8fafc;
  }

  .topic-line {
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.2), transparent);
    width: 70%;
    margin: 0 auto;
  }

  .faq-items {
    display: flex;
    flex-direction: column;
    gap: 25px;
    margin-bottom: 40px;
    position: relative;
    padding: 25px;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    background: #fff;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  .faq-item-wrapper {
    cursor: pointer;
    transition: transform 0.2s ease;
    position: relative;
    padding: 15px;
    border: 1px solid rgba(0, 0, 0, 0.05);
    border-radius: 8px;
  }

  .faq-item-wrapper:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    border-color: #3b82f6;
  }

  .new-label {
    position: absolute;
    top: -10px;
    right: -10px;
    z-index: 10;
    padding: 5px 12px;
    border-radius: 20px;
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .new-label-text {
    color: white;
  }

  .new-label.blue { background: #3b82f6; }
  .new-label.green { background: #10b981; }
  .new-label.purple { background: #8b5cf6; }
  .new-label.orange { background: #f97316; }
  .new-label.red { background: #ef4444; }

  [data-framer] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }

  [data-framer].animated {
    opacity: 1;
    transform: translateY(0);
  }


.assistant-toggle {
  position: fixed;
  bottom: 25px;
  left: 25px;
  z-index: 2000;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.toggle-wrapper {
  position: relative;
}

.msg-btn {
  font-size: 2rem;
  background: #3b82f6;
  color: white;
  border: none;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
  transition: background 0.3s;
}
.msg-btn:hover { background: #2563eb; }

.msg-count {
  position: absolute;
  top: -8px;
  right: -8px;
  background: #ef4444;
  color: white;
  font-size: 0.85rem;
  font-weight: bold;
  border-radius: 50%;
  padding: 3px 7px;
}

.last-msg {
  margin-top: 6px;
  background: #f8fafc;
  border: 1px solid rgba(0,0,0,0.3);
  border-radius: 6px;
  padding: 6px 10px;
  font-size: 0.85rem;
  max-width: 260px;
  box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}
.hidden { display: none; }

.msg-box {
  width: 360px;
  height: 480px;
  background: #fff;
  border: 1px solid rgba(0,0,0,0.3);
  border-radius: 12px;
  box-shadow: 0 6px 20px rgba(0,0,0,0.2);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  margin-top: 10px;
}

.linebox {
  border: 1px solid rgba(0,0,0,0.3);
  border-radius: 6px;
  padding: 10px;
  background: #f8fafc;
}

.header-box {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
}

.asst-fp {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 1px solid rgba(0,0,0,0.3);
}
.asst-name { font-weight: 700; }
.asst-desc { font-size: 0.85rem; color: #64748b; }

.close-btn {
  background: transparent;
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
}

.chat-area {
  flex: 1;
  overflow-y: auto;
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.chat-msg {
  max-width: 80%;
  padding: 8px 12px;
  border-radius: 8px;
  font-size: 0.9rem;
  border: 1px solid rgba(0,0,0,0.3);
  background: #f8fafc;
}
.chat-msg.user {
  align-self: flex-end;
  background: #3b82f6;
  color: white;
}
.chat-msg.asst {
  align-self: flex-start;
  background: #e2e8f0;
  color: #111827;
}

.msg-input {
  display: flex;
  gap: 8px;
  padding: 10px;
  border-top: 1px solid rgba(0,0,0,0.2);
  background: #f8fafc;
}
.msg-input input {
  flex: 1;
  border: 1px solid rgba(0,0,0,0.3);
  border-radius: 6px;
  padding: 8px;
}
.send-btn {
  background: #10b981;
  border: none;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}
.send-btn:hover { background: #059669; }
.send-icon { width: 20px; height: 20px; }



.msg-box {
  width: 380px;
  height: 500px;
  background: #fff;
  border: 1px solid rgba(0,0,0,0.25);
  border-radius: 16px;
  box-shadow: 0 10px 25px rgba(0,0,0,0.3);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  margin-top: 10px;
  transform: translateY(30px) scale(0.95);
  opacity: 0;
  transition: all 0.4s ease;
}
.msg-box.show {
  transform: translateY(0) scale(1);
  opacity: 1;
}

.chat-msg {
  max-width: 80%;
  padding: 10px 14px;
  border-radius: 10px;
  font-size: 0.9rem;
  border: 1px solid rgba(0,0,0,0.3);
  background: #f8fafc;
  animation: fadeInMsg 0.4s ease forwards;
  box-shadow: 2px 4px 8px rgba(0,0,0,0.15);
}
.chat-msg.user {
  align-self: flex-end;
  background: linear-gradient(135deg,#3b82f6,#2563eb);
  color: white;
}
.chat-msg.asst {
  align-self: flex-start;
  background: linear-gradient(135deg,#e2e8f0,#cbd5e1);
  color: #111827;
}
@keyframes fadeInMsg {
  from { opacity: 0; transform: translateY(15px) scale(0.95); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

/* Timestamp */
.msg-time {
  font-size: 0.75rem;
  color: #6b7280;
  margin-top: 4px;
  display: block;
  text-align: right;
}



:root {
  --bg-color: #f8fafc;
  --text-color: #334155;
  --box-bg: #fff;
  --accent: #3b82f6;
  --user-bg: linear-gradient(135deg,#3b82f6,#2563eb);
  --asst-bg: linear-gradient(135deg,#e2e8f0,#cbd5e1);
  --btn-bg: #10b981;
  --btn-hover: #059669;
  --shadow: rgba(0,0,0,0.2);
  --font-main: 'Space Mono', monospace;
}

body.night {
  --bg-color: #0f172a;
  --text-color: #f1f5f9;
  --box-bg: #1e293b;
  --accent: #f59e0b;
  --user-bg: linear-gradient(135deg,#2563eb,#1e40af);
  --asst-bg: linear-gradient(135deg,#334155,#1e293b);
  --btn-bg: #f59e0b;
  --btn-hover: #d97706;
  --shadow: rgba(255,255,255,0.15);
  --font-main: 'Poppins', sans-serif;
}

.theme-btn {
  background: transparent;
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
  color: var(--text-color);
}


.breadcrumb {
  font-size: 1.2rem;
  font-weight: 600;
  margin: 20px 0;
  color: #64748b;
  display: flex;
  gap: 8px;
  opacity: 0;
  transform: translateY(-8px);
  animation: fadeSlide 0.6s ease forwards;
}

.breadcrumb a {
  color: #3b82f6;
  text-decoration: none;
  position: relative;
}

.breadcrumb a:hover {
  text-decoration: underline;
}

/* Tambahkan panah otomatis antar link */
.breadcrumb a::after {
  content: "‚Ä∫";
  margin-left: 8px;
  color: #999;
}

.breadcrumb span.active {
  color: #111;
  font-weight: 700;
}

/* Animasi fade + slide */
@keyframes fadeSlide {
  from { opacity: 0; transform: translateY(-8px); }
  to   { opacity: 1; transform: translateY(0); }
}







 

  /* Footer */
  .footer-section {
    background: #000;
    color: white;
    padding: 40px 20px;
  }

  .footer-container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .footer-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 30px;
  }

  .footer-left {
    flex: 1;
  }

  .development-notice {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 15px 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .notice-icon {
    font-size: 1.5rem;
  }

  .notice-text {
    font-size: 1.1rem;
    font-weight: 700;
  }

  .footer-right {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 15px;
  }

  .footer-links {
    display: flex;
    gap: 25px;
  }

  .footer-link {
    color: #cbd5e1;
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.3s ease;
    padding: 8px 15px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 6px;
  }

  .footer-link:hover {
    color: white;
    background: rgba(255, 255, 255, 0.1);
  }

  .copyright {
    color: #64748b;
    font-size: 0.9rem;
  }


.social-contact-section {
  padding: 40px 20px;
  background: #fff;
}

.social-contact-container {
  max-width: 1200px;
  margin: 0 auto;
}

.social-contact-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.social-contact-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: #000;
  padding: 12px 20px;
  border: 1px solid rgba(0,0,0,0.3); /* line box hitam pudar */
  border-radius: 6px;
  background: #fff;
}

.social-icons-row {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
}

.social-icon-row {
  display: flex;
  align-items: center;
  gap: 10px;
  text-decoration: none;
  color: #000;
  font-weight: 600;
  padding: 8px 12px;
  border: 1px solid rgba(0,0,0,0.3);
  border-radius: 6px;
  background: #fff;
  transition: all 0.3s ease;
}

.social-icon-row:hover {
  border-color: #000;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1);
}

.icon-img {
  width: 22px;
  height: 22px;
}

.social-name {
  font-size: 1rem;
}

.arrow-icon {
  width: 18px;
  height: 18px;
  stroke: #000;
}













/* Blok Warna Hitam Penuh */
.color-block-full {
  background: #000;
  color: white;
  padding: 100px 20px;
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  box-sizing: border-box;
  min-height: 400px;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}

.color-block-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 80px;
  width: 100%;
  max-width: 1200px;
  margin-bottom: 60px;
  justify-content: space-between;
}

.color-block-left {
  text-align: right;
}

.title-left {
  font-size: 2.5rem;
  margin: 0;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: white;
  text-align: right;
}

.color-block-right {
  text-align: left;
}

.description-right {
  font-size: 1.1rem;
  line-height: 1.6;
  color: #cbd5e1;
  margin: 0;
  text-align: left;
}

.cta-center {
  text-align: center;
  width: 100%;
}




.cta-button-large {
  display: inline-block;
  background: transparent;
  color: #fff;                               /* teks putih */
  padding: 14px 36px;
  border-radius: 6px;
  text-decoration: none;
  font-weight: 700;
  font-size: 1rem;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 2px;
  cursor: pointer;

  /* GARIS UTAMA: putih pudar */
  border: 2px solid rgba(255, 255, 255, 0.4);
}





  /* Modal Styles - Line Box Hitam Pudar */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.6);
  }

  .modal-content {
    background-color: #fff;
    margin: 2% auto;
    padding: 0;
    border: 1px solid rgba(0, 0, 0, 0.1); /* Garis tipis hitam pudar */
    width: 92%;
    max-width: 1000px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    position: relative;
    max-height: 90vh;
    overflow-y: auto;
  }

/* --- GARIS KOTAK HITAM PUDAR PALING ANDAL --- */
.modal-box {
  padding: 16px 20px;
  margin-bottom: 18px;
  background: white;
  border-radius: 8px;
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.1),
    inset 0 0 0 1px rgba(0, 0, 0, 0.3);
  outline: 1px solid rgba(0, 0, 0, 0.3);
  position: relative;
}

/* Semua teks di dalam modal-box: besar + bold */
.modal-box * {
  font-size: 1.1rem !important;
  font-weight: 700 !important;
  line-height: 1.5 !important;
}

  .large-modal {
    max-width: 1100px;
  }

  .close {
    color: #aaa;
    position: absolute;
    top: 25px;
    right: 30px;
    font-size: 36px;
    font-weight: bold;
    z-index: 10;
    cursor: pointer;
    background: #f1f5f9;
    width: 45px;
    height: 45px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid #3b82f6;
  }

  .close:hover,
  .close:focus {
    color: #000;
    background: #e2e8f0;
    border-color: #2563eb;
  }

  /* Modal Content - Updated Design */
  .modal-faq-content {
    padding: 40px;
  }

  .modal-header {
    border-bottom: 2px solid #ddd;
    padding-bottom: 25px;
    margin-bottom: 30px;
    position: relative;
  }

  .modal-category {
    display: inline-block;
    background: #3b82f6;
    color: white;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 15px;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
  }

  .modal-title {
    font-size: 2.4rem;
    font-weight: 700;
    color: #000;
    margin: 0 0 20px 0;
    line-height: 1.3;
    padding: 15px;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    border-radius: 6px;
    background: #f8fafc;
  }

  .modal-meta {
    display: flex;
    align-items: center;
    gap: 20px;
    color: #64748b;
    font-size: 1.1rem;
    padding: 12px;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    border-radius: 6px;
    background: #f8fafc;
  }

  .modal-update {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .modal-status {
    display: flex;
    align-items: center;
    gap: 8px;
    background: #10b981;
    color: white;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 1rem;
    font-weight: 700;
    border: 1px solid #0da271;
    box-shadow: 0 4px 8px rgba(16, 185, 129, 0.2);
  }

  .modal-body {
    padding: 30px 0;
  }

  .modal-description {
    font-size: 1.2rem;
    line-height: 1.8;
    color: #334155;
    margin-bottom: 30px;
    padding: 20px;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    border-radius: 6px;
    background: #f8fafc;
  }

  .modal-timeline {
    position: relative;
    padding-left: 50px;
    margin: 30px 0;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    border-radius: 6px;
    padding: 20px;
    background: #f8fafc;
  }

  .modal-timeline::before {
    content: "";
    position: absolute;
    left: 40px;
    top: 30px;
    bottom: 30px;
    width: 2px;
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 6px,
      rgba(0, 0, 0, 0.2) 6px,
      rgba(0, 0, 0, 0.2) 12px
    );
  }

  .timeline-item {
    margin-bottom: 25px;
    position: relative;
    padding: 15px;
    border: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    border-radius: 6px;
    background: white;
  }

  .timeline-item::before {
    content: "";
    position: absolute;
    left: -45px;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid white;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2);
  }

  .timeline-title {
    font-weight: 700;
    margin-bottom: 10px;
    color: #000;
    font-size: 1.3rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.2); /* Line box */
    padding-bottom: 5px;
  }

  .timeline-content {
    color: #64748b;
    line-height: 1.6;
    font-size: 1.1rem;
  }

  /* Responsive */
  @media (max-width: 968px) {
    .typography-left-layout {
      grid-template-columns: 1fr;
      gap: 40px;
    }
    .page-title {
      font-size: 3.5rem;
    }
    .modal-title {
      font-size: 2.2rem;
    }
    .social-icons {
      grid-template-columns: repeat(2, 1fr);
    }
    .footer-content {
      flex-direction: column;
      text-align: center;
    }
    .footer-right {
      align-items: center;
    }
    .footer-links {
      flex-wrap: wrap;
      justify-content: center;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 15px;
    }
    .main-content {
      padding: 30px 0;
    }
    
    .page-title {
      font-size: 2.8rem;
    }
    .title-accent {
      font-size: 1rem;
    }
    .typography-description {
      font-size: 1.1rem;
    }
    .topic-title {
      font-size: 1.5rem;
      padding: 12px 20px;
    }
    .faq-items {
      padding: 20px;
    }
    .color-block-extra-large {
      padding: 80px 20px;
    }
    .color-block-extra-large h2 {
      font-size: 2rem;
    }
    .color-block-extra-large p {
      font-size: 1rem;
    }
    .cta-button-large {
      padding: 14px 30px;
      font-size: 1rem;
    }
    .modal-content {
      width: 95%;
      margin: 5% auto;
    }
    .modal-faq-content {
      padding: 40px;
    }
    .modal-title {
      font-size: 2.2rem;
      padding: 15px;
    }
    .modal-description {
      font-size: 1.1rem;
      padding: 20px;
    }
    .modal-timeline {
      padding-left: 40px;
      padding: 20px;
    }
    .timeline-item::before {
      left: -35px;
    }
    .social-contact-title {
      font-size: 2rem;
    }
    .social-icons {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 480px) {
   
    .page-title {
      font-size: 2.2rem;
      letter-spacing: -1px;
    }
    .title-accent {
      font-size: 0.9rem;
    }
    .typography-description {
      font-size: 1rem;
    }
    .topic-title {
      font-size: 1.3rem;
      padding: 10px 15px;
    }
    .faq-items {
      padding: 15px;
    }
    .faq-item-wrapper {
      padding: 12px;
    }
    .color-block-extra-large h2 {
      font-size: 1.7rem;
    }
    .cta-button-large {
      padding: 12px 25px;
      font-size: 0.9rem;
    }
    .modal-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }
    .modal-faq-content {
      padding: 25px;
    }
    .modal-title {
      font-size: 1.6rem;
    }
    .modal-timeline {
      padding-left: 30px;
      padding: 15px;
    }
    .timeline-item::before {
      left: -30px;
      width: 16px;
      height: 16px;
    }
    .social-contact-title {
      font-size: 1.7rem;
      flex-direction: column;
      gap: 10px;
    }
    .social-icons {
      grid-template-columns: 1fr;
    }
    .footer-links {
      flex-direction: column;
      gap: 15px;
    }
  }
</style>

<script>

  // Data FAQ untuk modal
  const faqData = [
    {
      id: 1,
      index: "1",
      icon: "üöÄ",
      question: "Apa itu Astro?",
      answer: "Astro adalah framework modern untuk membangun website statis dan hybrid yang super cepat. Astro memungkinkan developer menggunakan berbagai framework UI (seperti React, Vue, Svelte) dalam satu proyek.",
      fullDescription: "Astro adalah framework web all-in-one yang dirancang untuk membuat website yang cepat dan efisien. Dibangun dengan konsep 'island architecture', Astro memungkinkan Anda menggunakan komponen dari berbagai framework UI (React, Vue, Svelte, dll) dalam satu proyek, sambil tetap menghasilkan HTML statis yang optimal. Astro juga mendukung server-side rendering (SSR) melalui adapter, memberikan fleksibilitas dalam deployment.",
      category: "Pengenalan",
      lastUpdated: "15 November 2023, 14:30 WIB",
      isNew: true,
      labelColor: "blue",
      topic: "Dasar-Dasar Astro"
    },
    {
      id: 2,
      index: "2",
      icon: "üìÇ",
      question: "Di mana letak gambar?",
      answer: "Gambar disimpan di folder /public/images. Contohnya di sini: /images/5.jpg. Pastikan untuk mengoptimalkan gambar sebelum menggunakannya di website untuk performa yang lebih baik.",
      fullDescription: "Dalam proyek Astro, semua aset statis seperti gambar, font, dan file lainnya disimpan dalam folder /public. Folder ini secara langsung dipetakan ke root website Anda. Untuk gambar, disarankan menyimpannya di /public/images. Sebelum menggunakan gambar, pastikan untuk mengoptimalkannya dengan kompresi dan format yang tepat (WebP untuk browser modern, JPEG/PNG untuk kompatibilitas) untuk meningkatkan performa loading website.",
      category: "Struktur Proyek",
      lastUpdated: "12 November 2023, 09:15 WIB",
      isNew: true,
      labelColor: "green",
      topic: "Dasar-Dasar Astro"
    },
    {
      id: 3,
      index: "3",
      icon: "üîó",
      question: "Apakah ada tautan ke luar?",
      answer: `Ya, berikut adalah beberapa tautan penting:`,
      fullDescription: `Website ini menyediakan berbagai tautan eksternal yang berguna untuk pengembangan dengan Astro. Tautan-tautan tersebut termasuk:
        ‚Ä¢ Dokumentasi resmi Astro - sumber informasi terlengkap tentang semua fitur Astro
        ‚Ä¢ Repository GitHub - tempat Anda dapat berkontribusi atau melaporkan issues
        ‚Ä¢ Halaman integrasi - menampilkan semua plugin dan adapter yang tersedia
        ‚Ä¢ Komunitas Discord - tempat berinteraksi dengan developer Astro lainnya
        ‚Ä¢ Blog Astro - tutorial dan pengumuman terbaru`,
      category: "Sumber Daya",
      lastUpdated: "10 November 2023, 16:45 WIB",
      isNew: true,
      labelColor: "purple",
      topic: "Sumber Daya"
    },
    {
      id: 4,
      index: "4",
      icon: "‚öôÔ∏è",
      question: "Bagaimana cara instalasi Astro?",
      answer: `Untuk menginstall Astro, Anda dapat menggunakan perintah berikut:`,
      fullDescription: `Instalasi Astro sangat mudah dan dapat dilakukan dalam beberapa langkah:
        1. Pastikan Anda telah menginstall Node.js versi 16 atau lebih tinggi
        2. Jalankan perintah: npm create astro@latest
        3. Ikuti prompt yang muncul untuk mengkonfigurasi proyek
        4. Masuk ke direktori proyek: cd nama-proyek-anda
        5. Install dependencies: npm install
        6. Jalankan server development: npm run dev
        Anda juga dapat membuat proyek Astro dengan template tertentu menggunakan perintah:
        npm create astro@latest -- --template nama-template
        Beberapa template populer termasuk blog, dokumentasi, dan portfolio.`,
      category: "Instalasi",
      lastUpdated: "8 November 2023, 11:20 WIB",
      isNew: true,
      labelColor: "orange",
      topic: "Instalasi & Setup"
    },
    {
      id: 5,
      index: "5",
      icon: "üåê",
      question: "Apakah Astro mendukung SSR?",
      answer: "Ya, Astro mendukung Server-Side Rendering (SSR) melalui adapter. Anda dapat menambahkan SSR ke proyek Astro dengan menginstall adapter untuk deployment target Anda (seperti Netlify, Vercel, atau Node.js).",
      fullDescription: `Astro memang mendukung Server-Side Rendering (SSR) melalui sistem adapter. Fitur ini memungkinkan Anda untuk:
        ‚Ä¢ Menghalaman konten dinamis pada server
        ‚Ä¢ Mengimplementasikan API routes
        ‚Ä¢ Menangani autentikasi pengguna
        ‚Ä¢ Mengelola data real-time
        Untuk mengaktifkan SSR, Anda perlu menginstall adapter yang sesuai dengan platform deployment Anda. Beberapa adapter yang tersedia:
        ‚Ä¢ @astrojs/netlify - untuk deploy ke Netlify
        ‚Ä¢ @astrojs/vercel - untuk deploy ke Vercel
        ‚Ä¢ @astrojs/node - untuk deploy ke lingkungan Node.js
        ‚Ä¢ @astrojs/cloudflare - untuk deploy ke Cloudflare Pages
        Setelah menginstall adapter, Anda perlu mengkonfigurasinya dalam file astro.config.mjs.`,
      category: "Fitur",
      lastUpdated: "5 November 2023, 13:10 WIB",
      isNew: true,
      labelColor: "red",
      topic: "Fitur Lanjutan"
    },
    {
      id: 6,
      index: "6",
      icon: "üì±",
      question: "Apakah Astro responsive?",
      answer: "Ya, Astro menghasilkan website yang fully responsive. Developer dapat dengan mudah membuat layout yang responsive dengan menggunakan CSS biasa atau framework CSS seperti Tailwind.",
      fullDescription: `Astro sendiri tidak menentukan bagaimana Anda membuat website responsive - itu sepenuhnya tergantung pada implementasi CSS Anda. Namun, Astro memberikan kebebasan penuh untuk menggunakan:
        ‚Ä¢ CSS vanilla dengan media queries
        ‚Ä¢ Framework CSS seperti Tailwind, Bootstrap, atau Bulma
        ‚Ä¢ CSS-in-JS libraries seperti styled-components
        ‚Ä¢ CSS modules untuk scoped styling
        Karena Astro menghasilkan HTML statis, performa website biasanya sangat baik untuk perangkat mobile. You dapat dengan mudah mengimplementasikan responsive design patterns seperti:
        ‚Ä¢ Mobile-first design
        ‚Ä¢ Flexible grid layouts
        ‚Ä¢ Responsive images dengan elemen picture atau srcset
        ‚Ä¢ Conditional loading komponen berdasarkan breakpoint
        Astro juga mendukung pengelolaan asset yang cerdas, termasuk generating responsive images pada build time.`,
      category: "Responsivitas",
      lastUpdated: "3 November 2023, 17:30 WIB",
      isNew: false,
      labelColor: "",
      topic: "Fitur Lanjutan"
    }
  ];

// Data timeline website
const websites = [
  { name: "Astro Official", url: "https://astro.build", date: "Jan 2023" },
  { name: "Vercel", url: "https://vercel.com", date: "Feb 2023" },
  { name: "Netlify", url: "https://netlify.com", date: "Mar 2023" },
  { name: "Cloudflare Pages", url: "https://pages.cloudflare.com", date: "Apr 2023" },
  { name: "GitHub", url: "https://github.com", date: "May 2023" }
];

// Fungsi buka modal timeline
function openTimelineModal() {
  const modal = document.getElementById("timelineModal");
  const content = document.getElementById("timelineContent");
  let html = `
    <div class="modal-faq-content">
      <div class="modal-header" style="
        border: 1px solid rgba(0,0,0,0.3);
        padding: 15px 20px;
        border-radius: 8px;
        background: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 25px;
      ">
        <h2 style="
          font-size: 2.4rem; 
          font-weight: 700; 
          color: #000; 
          margin: 0;
        ">
          Timeline Website
        </h2>
      </div>
      <div class="modal-timeline" style="position: relative; padding-left: 30px;">
  `;

  websites.forEach((site, index) => {
    const isLast = index === websites.length - 1;

    html += `
      <div class="timeline-item" style="
        position: relative;
        margin-bottom: 25px;
        border: 1px solid rgba(0,0,0,0.3);
        border-radius: 6px;
        background: white;
        padding: 15px 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      ">
        <!-- Titik Bulat -->
        <div class="timeline-dot" style="
          position: absolute;
          left: -24px;
          top: 20px;
          width: 14px;
          height: 14px;
          background: #3b82f6;
          border-radius: 50%;
          border: 2px solid white;
          box-shadow: 0 0 0 1px rgba(0,0,0,0.2);
          z-index: 2;
        "></div>

        <!-- Garis Patah-Patah -->
        ${!isLast ? `
        <div class="timeline-line" style="
          position: absolute;
          left: -18px;
          top: 40px;
          width: 2px;
          height: calc(100% + 20px);
          border-left: 2px dashed rgba(0,0,0,0.3);
          z-index: 1;
        "></div>` : ""}

        <!-- Konten -->
        <div class="timeline-title" style="
          font-weight: 700;
          margin-bottom: 8px;
          color: #000;
          font-size: 1.3rem;
        ">
          ${site.name}
        </div>
        <div class="timeline-link" style="
          color: #3b82f6;
          font-size: 1.05rem;
        ">
          <a href="${site.url}" target="_blank">${site.url}</a> ‚Ä¢ ${site.date}
        </div>
      </div>
    `;
  });

  html += `</div></div>`;
  content.innerHTML = html;
  modal.style.display = "block";
}


import { initializeApp } from "https://www.gstatic.com/firebasejs/11.3.1/firebase-app.js";
import { 
  getFirestore, 
  collection, 
  addDoc, 
  serverTimestamp,
  onSnapshot, 
  query, 
  orderBy,
increment,
 doc, 
  setDoc, 
  getDoc, 
  updateDoc
} from "https://www.gstatic.com/firebasejs/11.3.1/firebase-firestore.js";

const firebaseConfig = {
  apiKey: "AIzaSyCYbxo8n1zn-Y3heCIn_PmrsK44_OrdEw4",
  authDomain:"noted-a3498.firebaseapp.com",
  projectId: "noted-a3498",
  storageBucket: "noted-a3498.appspot.com",
  messagingSenderId: "1077214793842",
  appId: "1:1077214793842:web:a70cc3643eceb53e3932eb",
  measurementId: "G-SENDQS5Y7K"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);




// Fungsi format waktu relatif
function timeAgo(date) {
  const now = new Date();
  const diff = Math.floor((now - date) / 1000); // detik
  if (diff < 60) return "baru saja";
  if (diff < 3600) return `${Math.floor(diff/60)} menit yang lalu`;
  if (diff < 86400) return `${Math.floor(diff/3600)} jam yang lalu`;
  return date.toLocaleString("id-ID", {
    weekday: "long", day: "numeric", month: "long", year: "numeric", hour: "2-digit", minute: "2-digit"
  });
}

document.addEventListener("DOMContentLoaded", () => {
  const toggleBtn = document.getElementById("msgToggleBtn");
  const closeBtn = document.getElementById("closeBtn");
  const msgBox = document.getElementById("msgBox");
  const chatArea = document.getElementById("chatArea");
  const form = document.getElementById("msgForm");
  const msgCount = document.getElementById("msgCount");
  const lastMsgPreview = document.getElementById("lastMsgPreview");

  // Toggle buka
  toggleBtn.addEventListener("click", () => {
    msgBox.classList.toggle("show");
    msgBox.classList.toggle("hidden");
    lastMsgPreview.classList.add("hidden");

    if (!chatArea.querySelector(".auto-greet")) {
      const greet = document.createElement("div");
      greet.className = "chat-msg asst auto-greet";
      greet.innerHTML = `Halo üëã, saya Asisten Virtual. Ada yang bisa saya bantu?
        <span class="msg-time">${timeAgo(new Date())}</span>`;
      chatArea.appendChild(greet);
    }
  });

  closeBtn.addEventListener("click", () => {
    msgBox.classList.remove("show");
    msgBox.classList.add("hidden");
  });

  // Kirim pesan
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const name = document.getElementById("msgName").value.trim();
    const desc = document.getElementById("msgDesc").value.trim();
    if (!name || !desc) return;

    await addDoc(collection(db, "messages"), {
      name,
      desc,
      createdAt: serverTimestamp()
    });
    form.reset();
  });

  // Ambil pesan realtime
  const q = query(collection(db, "messages"), orderBy("createdAt", "asc"));
  onSnapshot(q, (snapshot) => {
    chatArea.innerHTML = "";
    let lastMsg = "";
    let count = 0;

    // greet tetap ada
    const greet = document.createElement("div");
    greet.className = "chat-msg asst auto-greet";
    greet.innerHTML = `Halo üëã, saya Asisten Virtual. Ada yang bisa saya bantu?
      <span class="msg-time">${timeAgo(new Date())}</span>`;
    chatArea.appendChild(greet);

    snapshot.forEach((doc) => {
      const data = doc.data();
      const created = data.createdAt?.toDate?.() || new Date();
      const msg = document.createElement("div");
      msg.className = "chat-msg user";
      msg.innerHTML = `<b>${data.name || "Anonim"}:</b> ${data.desc}
        <span class="msg-time">${timeAgo(created)}</span>`;
      chatArea.appendChild(msg);
      lastMsg = data.desc;
      count++;
    });

    msgCount.textContent = count;
    if (lastMsg) {
      lastMsgPreview.textContent = lastMsg;
      lastMsgPreview.classList.remove("hidden");
    }

    chatArea.scrollTop = chatArea.scrollHeight;
  });
});

document.addEventListener("DOMContentLoaded", () => {
  const themeToggle = document.getElementById("themeToggle");

  function setTheme(mode) {
    if (mode === "night") {
      document.body.classList.add("night");
      themeToggle.textContent = "‚òÄÔ∏è";
      localStorage.setItem("theme", "night");
    } else {
      document.body.classList.remove("night");
      themeToggle.textContent = "üåô";
      localStorage.setItem("theme", "day");
    }
  }

  // Deteksi otomatis sesuai jam
  const hour = new Date().getHours();
  if (hour >= 18 || hour < 6) {
    setTheme("night");
  } else {
    setTheme("day");
  }

  // Cek preferensi sebelumnya
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) setTheme(savedTheme);

  // Toggle manual
  themeToggle.addEventListener("click", () => {
    if (document.body.classList.contains("night")) {
      setTheme("day");
    } else {
      setTheme("night");
    }
  });
});






// Fungsi untuk modal development
function openDevModal() {
  document.getElementById('devModal').style.display = 'block';
}

function closeDevModal() {
  document.getElementById('devModal').style.display = 'none';
}

// Update tanggal terakhir
document.addEventListener('DOMContentLoaded', function() {
  const now = new Date();
  const options = { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  };
  const dateTimeStr = now.toLocaleDateString('id-ID', options);
  
  // Set tanggal di banner
  if (document.getElementById('currentDate')) {
    document.getElementById('currentDate').textContent = dateTimeStr.toUpperCase();
  }
  
  // Set tanggal update terakhir di modal
  if (document.getElementById('lastUpdateValue')) {
    document.getElementById('lastUpdateValue').textContent = dateTimeStr;
  }
  
  // Tutup modal ketika klik di luar
  window.onclick = function(event) {
    const modal = document.getElementById('devModal');
    if (event.target == modal) {
      closeDevModal();
    }
  };
});










// üîπ Bikin anonymousId (opsional, kalau masih mau dipakai)
let anonymousId = localStorage.getItem("faqAnonId");
if (!anonymousId) {
  anonymousId = "anon-" + Math.random().toString(36).substring(2, 15);
  localStorage.setItem("faqAnonId", anonymousId);
}

let currentFaqIndex = 0;

async function loadFeedback(faq) {
  const feedbackRef = doc(db, "faqFeedback", `faq-${faq.id}`);

  // buat dokumen feedback kalau belum ada
  const snap = await getDoc(feedbackRef);
  if (!snap.exists()) {
    await setDoc(feedbackRef, { likes: 0, dislikes: 0 });
  }

  // realtime listener update angka
  onSnapshot(feedbackRef, (docSnap) => {
    if (docSnap.exists()) {
      document.getElementById("likeCount").textContent = docSnap.data().likes || 0;
      document.getElementById("dislikeCount").textContent = docSnap.data().dislikes || 0;
    }
  });
}

document.addEventListener("DOMContentLoaded", () => {
  const faq = faqData[currentFaqIndex];
  loadFeedback(faq); // load angka awal

  const likeBtn = document.getElementById("faqLikeBtn");
  const dislikeBtn = document.getElementById("faqDislikeBtn");

  // klik like ‚Üí selalu tambah 1
  likeBtn.addEventListener("click", async () => {
    const faq = faqData[currentFaqIndex];
    const feedbackRef = doc(db, "faqFeedback", `faq-${faq.id}`);
    await updateDoc(feedbackRef, { likes: increment(1) });
    likeBtn.classList.add("selected");
    dislikeBtn.classList.remove("selected");
  });

  // klik dislike ‚Üí selalu tambah 1
  dislikeBtn.addEventListener("click", async () => {
    const faq = faqData[currentFaqIndex];
    const feedbackRef = doc(db, "faqFeedback", `faq-${faq.id}`);
    await updateDoc(feedbackRef, { dislikes: increment(1) });
    dislikeBtn.classList.add("selected");
    likeBtn.classList.remove("selected");
  });
});














document.addEventListener('DOMContentLoaded', function() {
  // Pastikan semua bagian memiliki ID yang sesuai
  const sections = [
    { id: 'breadcrumb', element: document.querySelector('.breadcrumb') },
    { id: 'main-title', element: document.querySelector('.title-section') },
    { id: 'dasar-dasar', element: document.querySelector('.faq-topic-group:nth-child(1)') },
    { id: 'sumber-daya', element: document.querySelector('.faq-topic-group:nth-child(3)') },
    { id: 'instalasi-setup', element: document.querySelector('.faq-topic-group:nth-child(5)') },
    { id: 'fitur-lanjutan', element: document.querySelector('.faq-topic-group:nth-child(7)') },
    { id: 'contact-block', element: document.querySelector('.color-block-full') },
    { id: 'footer', element: document.querySelector('.footer-section') }
  ];
  
  // Tambahkan ID ke elemen jika belum ada
  sections.forEach(section => {
    if (section.element && !section.element.id) {
      section.element.id = section.id;
    }
  });
  
  // Inisialisasi elemen timeline
  const markers = document.querySelectorAll('.timeline-marker');
  const progressBar = document.querySelector('.timeline-progress');
  
  // Fungsi untuk update timeline
  function updateTimeline() {
    const scrollPosition = window.scrollY;
    const documentHeight = document.documentElement.scrollHeight - window.innerHeight;
    const scrollPercentage = (scrollPosition / documentHeight) * 100;
    
    // Update progress bar
    progressBar.style.height = scrollPercentage + '%';
    
    // Cari section yang sedang aktif
    let currentSection = null;
    let minDistance = Infinity;
    
    sections.forEach(section => {
      if (section.element) {
        const rect = section.element.getBoundingClientRect();
        const distance = Math.abs(rect.top);
        
        if (distance < minDistance && rect.top < window.innerHeight / 2) {
          minDistance = distance;
          currentSection = section.id;
        }
      }
    });
    
    // Update marker aktif
    markers.forEach(marker => {
      if (marker.getAttribute('data-target') === currentSection) {
        marker.classList.add('active');
      } else {
        marker.classList.remove('active');
      }
    });
  }
  
  // Event listener untuk scroll
  window.addEventListener('scroll', updateTimeline);
  
  // Event listener untuk klik marker
  markers.forEach(marker => {
    marker.addEventListener('click', function() {
      const targetId = this.getAttribute('data-target');
      const targetElement = document.getElementById(targetId);
      
      if (targetElement) {
        window.scrollTo({
          top: targetElement.offsetTop - 80,
          behavior: 'smooth'
        });
      }
    });
  });
  
  // Inisialisasi timeline
  setTimeout(updateTimeline, 100);
});









document.addEventListener('DOMContentLoaded', function () {
  // ==== CONTACT BUTTON & TIMELINE MODAL ====
  const contactBtn = document.getElementById('contactBtn');
  if (contactBtn) {
    contactBtn.addEventListener('click', function(e) {
      e.preventDefault();
      openTimelineModal();
    });
  }

  const timelineModal = document.getElementById('timelineModal');
  const timelineCloseBtn = document.querySelector('#timelineModal .close');
  if (timelineCloseBtn) {
    timelineCloseBtn.onclick = function() {
      timelineModal.style.display = 'none';
    };
  }

  // ==== TANGGAL & JAM ====
  const now = new Date();
  const options = { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  };
  const dateTimeStr = now.toLocaleDateString('id-ID', options);
  const currentDateEl = document.getElementById('currentDate');
  if (currentDateEl) {
    currentDateEl.textContent = dateTimeStr.toUpperCase();
  }

  // ==== ANIMASI SCROLL DENGAN INTERSECTION OBSERVER ====
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animated');
      }
    });
  }, observerOptions);

  document.querySelectorAll('[data-framer]').forEach(el => {
    observer.observe(el);
  });

  // ==== ANIMASI FAQ IMAGE ====
  const image = document.querySelector('.faq-image');
  if (image) {
    image.style.opacity = '0';
    image.style.transform = 'scale(0.95)';
    image.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
    setTimeout(() => {
      image.style.opacity = '1';
      image.style.transform = 'scale(1)';
    }, 300);
  }

  // ==== ANIMASI TITLE ====
  const title = document.querySelector('.page-title');
  if (title) {
    title.style.opacity = '0';
    title.style.transform = 'translateY(-15px)';
    title.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
    setTimeout(() => {
      title.style.opacity = '1';
      title.style.transform = 'translateY(0)';
    }, 100);
  }

  // ==== FAQ MODAL ====
  const faqModal = document.getElementById("faqModal");
  const faqCloseBtn = faqModal ? faqModal.getElementsByClassName("close")[0] : null;

  document.querySelectorAll('.faq-item-wrapper').forEach(wrapper => {
    wrapper.addEventListener('click', function() {
      const faqId = parseInt(this.getAttribute('data-faq-id'));
      openFAQModal(faqId);
    });
  });

  if (faqCloseBtn) {
    faqCloseBtn.onclick = function() {
      faqModal.style.display = "none";
    };
  }

  // ==== GLOBAL CLOSE MODAL (klik luar) ====
  window.onclick = function(event) {
    if (event.target === timelineModal) {
      timelineModal.style.display = 'none';
    }
    if (event.target === faqModal) {
      faqModal.style.display = 'none';
    }
  };
});








function openFAQModal(id) {
  const faq = faqData.find(item => item.id === id);
  if (!faq) return;

  const modal = document.getElementById("faqModal");
  const modalContent = document.getElementById("modalContent");

  modalContent.innerHTML = `
    <div class="modal-faq-content" style="padding: 40px;">
      <!-- Kategori -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.1rem; font-weight: 700;">
        <span style="background: #3b82f6; color: white; padding: 8px 16px; border-radius: 6px; font-size: 0.9rem; font-weight: 700; text-transform: uppercase; letter-spacing: 0.5px; border: 1px solid rgba(0,0,0,0.2); display: inline-block;">
          ${faq.category}
        </span>
      </div>

      <!-- Judul -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.1rem; font-weight: 700;">
        <h2 style="font-size: 2.4rem; font-weight: 700; color: #000; margin: 0 0 20px 0; line-height: 1.3; padding: 15px; border: 1px solid rgba(0,0,0,0.2); border-radius: 6px; background: #f8fafc;">
          ${faq.icon} ${faq.question}
        </h2>
      </div>

      <!-- Meta: tanggal + status -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.1rem; font-weight: 700; display: flex; align-items: center; gap: 20px; flex-wrap: wrap;">
        <span>üïí ${faq.lastUpdated}</span>
        ${faq.isNew ? '<span style="background: #10b981; color: white; padding: 8px 16px; border-radius: 6px; font-size: 1rem; font-weight: 700; border: 1px solid #0da271; display: inline-flex; align-items: center; gap: 8px;">üÜï BARU</span>' : ''}
      </div>

      <!-- Highlight / jawaban singkat -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.2rem; font-weight: 700;">
        ${faq.answer}
      </div>

      <!-- Deskripsi -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.2rem; font-weight: 700; line-height: 1.8; color: #334155;">
        ${faq.fullDescription.replace(/\n/g, '<br>')}
      </div>

      <!-- Timeline -->
      <div style="border: 2px solid rgba(0,0,0,0.3) !important; border-radius: 8px; padding: 16px 20px; margin-bottom: 18px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1); font-size: 1.1rem; font-weight: 700; position: relative;">
        <div style="position: relative; padding-left: 40px;">
          <!-- Garis vertikal timeline -->
          <div style="position: absolute; left: 30px; top: 0; bottom: 0; width: 2px; background: repeating-linear-gradient(to bottom, transparent, transparent 6px, rgba(0,0,0,0.2) 6px, rgba(0,0,0,0.2) 12px);"></div>

          <!-- Item 1 -->
          <div style="margin-bottom: 25px; position: relative; padding: 15px; border: 1px solid rgba(0,0,0,0.2); border-radius: 6px; background: white;">
            <div style="position: absolute; left: -35px; top: 50%; transform: translateY(-50%); width: 16px; height: 16px; border-radius: 50%; background: rgba(0,0,0,0.2); border: 1px solid white;"></div>
            <div style="font-weight: 700; margin-bottom: 10px; color: #000; font-size: 1.3rem; border-bottom: 1px solid rgba(0,0,0,0.2); padding-bottom: 5px;">Informasi Penting</div>
            <div style="color: #64748b; line-height: 1.6;">Informasi detail tentang ${faq.topic} yang perlu diperhatikan.</div>
          </div>

          <!-- Item 2 -->
          <div style="margin-bottom: 25px; position: relative; padding: 15px; border: 1px solid rgba(0,0,0,0.2); border-radius: 6px; background: white;">
            <div style="position: absolute; left: -35px; top: 50%; transform: translateY(-50%); width: 16px; height: 16px; border-radius: 50%; background: rgba(0,0,0,0.2); border: 1px solid white;"></div>
            <div style="font-weight: 700; margin-bottom: 10px; color: #000; font-size: 1.3rem; border-bottom: 1px solid rgba(0,0,0,0.2); padding-bottom: 5px;">Tips Penggunaan</div>
            <div style="color: #64748b; line-height: 1.6;">Beberapa tips untuk memaksimalkan penggunaan fitur ini.</div>
          </div>

          <!-- Item 3 -->
          <div style="margin-bottom: 25px; position: relative; padding: 15px; border: 1px solid rgba(0,0,0,0.2); border-radius: 6px; background: white;">
            <div style="position: absolute; left: -35px; top: 50%; transform: translateY(-50%); width: 16px; height: 16px; border-radius: 50%; background: rgba(0,0,0,0.2); border: 1px solid white;"></div>
            <div style="font-weight: 700; margin-bottom: 10px; color: #000; font-size: 1.3rem; border-bottom: 1px solid rgba(0,0,0,0.2); padding-bottom: 5px;">Best Practices</div>
            <div style="color: #64748b; line-height: 1.6;">Rekomendasi praktik terbaik untuk implementasi yang optimal.</div>
          </div>
        </div>
      </div>
    </div>
  `;

  modal.style.display = "block";
}
</script>
















