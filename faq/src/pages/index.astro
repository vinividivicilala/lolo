---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
---

<Layout title="Home | Note Farid" description="Website pribadi Farid dengan blog dan FAQ tentang development web." currentPage="home">
  <div class="container">
    <main class="home-container">
      <section class="hero-section">
        <h1 class="hero-title">Note Farid</h1>
        <p class="hero-subtitle">Tempat berbagi pengetahuan tentang development web, Astro, dan teknologi terkini.</p>



<!-- Section Website Masih Dikembangkan -->
        <div class="development-notice">
          <div class="development-linebox">
            <div class="development-content">
              <div class="development-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="animated-icon">
                  <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                  <line x1="12" y1="9" x2="12" y2="13"></line>
                  <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
              </div>
              <div class="development-text">
                <h3>Website Ini Masih Dikembangkan</h3>
                <p>Kami terus bekerja untuk meningkatkan pengalaman pengguna. Beberapa fitur mungkin masih dalam tahap pengembangan.</p>
              </div>
            </div>
            <div class="development-progress">
              <div class="progress-bar">
                <div class="progress-fill"></div>
              </div>
              <span class="progress-text">Progress: 75%</span>
            </div>
          </div>
        </div>
        
        <div class="linebox">
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>
              <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>
            </svg>
            <span>Notifikasi</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
            </svg>
            <span>Pesan</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
              <circle cx="9" cy="7" r="4"></circle>
              <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
            </svg>
            <span>Komunitas</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14 2 14 8 20 8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
              <polyline points="10 9 9 9 8 9"></polyline>
            </svg>
            <span>Postingan</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
              <circle cx="12" cy="7" r="4"></circle>
            </svg>
            <span>Tentang Saya</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            <span>Meeting</span>
          </div>

  <!-- Tambahan item baru -->
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
              <polyline points="22,6 12,13 2,6"></polyline>
            </svg>
            <span>Gmail</span>
          </div>
          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
              <circle cx="8.5" cy="8.5" r="1.5"></circle>
              <polyline points="21,15 16,10 5,21"></polyline>
            </svg>
            <span>Galeri</span>
          </div>
     

          
          <div class="linebox-item">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
            </svg>
            <span>Daftar Project</span>
          </div>
        </div>


  <!-- TIMELINE CONTAINER -->
        <div class="timeline-container">
          
          <!-- ITEM 1 -->
          <div class="timeline-item">
            <div class="timeline-dot active"></div>
            <div class="timeline-connector"></div>
            <div class="timeline-content">
              <div class="timeline-left">
                <span class="date">2025-09-19</span>
                <h3 class="title">Rilis Website</h3>
                <span class="label linebox">VERSI PRODUKSI</span>
              </div>
              <div class="timeline-right linebox">
                <p class="text">
                  Peluncuran versi pertama website portfolio dengan desain minimalis dan interaktif.
                </p>
              </div>
            </div>
          </div>

          <!-- ITEM 2 -->
          <div class="timeline-item">
            <div class="timeline-dot"></div>
            <div class="timeline-connector"></div>
            <div class="timeline-content">
              <div class="timeline-left">
                <span class="date">2025-10-05</span>
                <h3 class="title">Update Fitur</h3>
                <span class="label linebox">VERSI 1.1</span>
              </div>
              <div class="timeline-right linebox">
                <p class="text">
                  Penambahan sistem komentar, perbaikan bug, dan optimasi tampilan untuk perangkat mobile.
                </p>
              </div>
            </div>
          </div>

          <!-- ITEM 3 -->
          <div class="timeline-item">
            <div class="timeline-dot"></div>
            <div class="timeline-connector"></div>
            <div class="timeline-content">
              <div class="timeline-left">
                <span class="date">2025-11-01</span>
                <h3 class="title">Integrasi Firebase</h3>
                <span class="label linebox">BACKEND</span>
              </div>
              <div class="timeline-right linebox">
                <p class="text">
                  Implementasi sistem login Google, penyimpanan komentar, dan rating bintang dengan Firestore.
                </p>
              </div>
            </div>
          </div>

          <!-- ITEM 4 -->
          <div class="timeline-item">
            <div class="timeline-dot"></div>
            <div class="timeline-connector"></div>
            <div class="timeline-content">
              <div class="timeline-left">
                <span class="date">2025-12-10</span>
                <h3 class="title">Dark Mode</h3>
                <span class="label linebox">UI/UX</span>
              </div>
              <div class="timeline-right linebox">
                <p class="text">
                  Penambahan dark mode, peningkatan animasi timeline, dan desain baru untuk halaman pengumuman penting.
                </p>
              </div>
            </div>
          </div>

<!-- Tambahkan setelah timeline-container -->
<section class="legal-section">
  <div class="legal-linebox">
    <div class="legal-content">
      <div class="legal-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14 2 14 8 20 8"></polyline>
          <line x1="16" y1="13" x2="8" y2="13"></line>
          <line x1="16" y1="17" x2="8" y2="17"></line>
        </svg>
      </div>
      <div class="legal-text">
        <h3>Informasi Legal</h3>
        <p>Ketentuan penggunaan website dan perlindungan data pribadi</p>
      </div>
      <div class="legal-arrow">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="7" y1="17" x2="17" y2="7"></line>
          <polyline points="7 7 17 7 17 17"></polyline>
        </svg>
      </div>
    </div>
    
    <div class="legal-links">
      <a href="/privacy-policy" class="legal-link">
        <span>Kebijakan Privasi</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="7" y1="17" x2="17" y2="7"></line>
          <polyline points="7 7 17 7 17 17"></polyline>
        </svg>
      </a>
      
      <a href="/terms-conditions" class="legal-link">
        <span>Syarat & Ketentuan</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="7" y1="17" x2="17" y2="7"></line>
          <polyline points="7 7 17 7 17 17"></polyline>
        </svg>
      </a>

 <a href="/privacy-policy" class="legal-link">
        <span>Berikan masukan</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="7" y1="17" x2="17" y2="7"></line>
          <polyline points="7 7 17 7 17 17"></polyline>
        </svg>
      </a>
    </div>
  </div>
  <!-- Feedback Section -->
        <div class="feedback-section">
          <div class="feedback-linebox">
            <div class="feedback-header">
              <div class="feedback-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
              </div>
              <div class="feedback-title">
                <h3>Kotak Saran & Kritik</h3>
                <p>Berikan masukan untuk pengembangan website ini</p>
                <span class="last-update">Last Update: <span id="lastUpdateTime">Loading...</span></span>
              </div>
              <div class="feedback-arrow">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <line x1="7" y1="17" x2="17" y2="7"></line>
                  <polyline points="7 7 17 7 17 17"></polyline>
                </svg>
              </div>
            </div>

            <form id="feedbackForm" class="feedback-form">
              <div class="form-group">
                <input type="text" id="feedbackName" placeholder="Nama Anda (opsional)" class="form-input" />
              </div>
              <div class="form-group">
                <input type="text" id="feedbackTitle" placeholder="Judul Saran/Kritik" class="form-input" required />
              </div>
              <div class="form-group">
                <textarea id="feedbackMessage" placeholder="Keterangan detail..." class="form-textarea" rows="4" required></textarea>
              </div>
              <button type="submit" class="submit-btn">
                <span>Kirim Saran</span>
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <line x1="22" y1="2" x2="11" y2="13"></line>
                  <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                </svg>
              </button>
            </form>

            <div id="feedbackStatus" class="feedback-status"></div>
          </div>
        </div>

        <!-- Container untuk menampilkan feedback terbaru -->
        <div class="feedback-display-section">
          <div class="feedback-display-linebox">
            <div class="feedback-display-header">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
              </svg>
              <h3>Saran & Kritik Terbaru</h3>
              <span class="feedback-count">(<span id="feedbackCount">0</span> saran)</span>
            </div>
            <div id="latestFeedback" class="feedback-list"></div>
          </div>
        </div>


          </div>
        </div>



      </section>
    </main>
  </div>
</Layout>

<style>

@import url('https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap');

  body {
    background: #000;
    color: #fff;
    min-height: 100vh;
    padding: 0;
    margin: 0;
     font-family: 'Space Mono', monospace;
 text-align: left; /* semua rata kiri */
padding-left: 60px; 

  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
   font-family: 'Space Mono', monospace;

  }







/* Kursor kustom */
  .custom-cursor {
    position: fixed;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.2s ease;
  }
  
  .cursor-dot {
    position: fixed;
    top: 0;
    left: 0;
    width: 4px;
    height: 4px;
    background-color: #000;
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    transition: transform 0.1s ease;
  }
  
  /* Efek saat hover di atas elemen yang dapat diinteraksi */
  .cursor-hover {
    transform: scale(2);
    background-color: rgba(0, 0, 0, 0.7);
  }
  
  /* Efek saat hover di atas teks */
  .cursor-text {
    transform: scale(3);
    background-color: rgba(0, 0, 0, 0.8);
  }
  
  /* Efek saat hover di atas tombol */
  .cursor-button {
    transform: scale(1.5);
    background-color: rgba(0, 0, 0, 0.9);
  }
  
  /* Sembunyikan kursor default */
  body {
    cursor: none;
  }
  
  /* Pastikan kursor default tetap muncul di elemen input/textarea */
  input, textarea, select, button {
    cursor: auto;
  }







  /* Feedback Display Section */
  .feedback-display-section {
    margin: 40px 0;
    max-width: 800px;
  }

  .feedback-display-linebox {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    padding: 30px;
    backdrop-filter: blur(10px);
    position: relative;
    overflow: hidden;
  }

  .feedback-display-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 25px;
    padding-bottom: 20px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .feedback-display-header svg {
    color: #9dbbff;
  }

  .feedback-display-header h3 {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    color: #fff;
  }

  .feedback-count {
    color: #9dbbff;
    font-size: 1rem;
    font-weight: 600;
    margin-left: auto;
    background: rgba(157, 187, 255, 0.1);
    padding: 5px 12px;
    border-radius: 20px;
    border: 1px solid rgba(157, 187, 255, 0.3);
  }

  .feedback-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
    max-height: 600px;
    overflow-y: auto;
    padding-right: 10px;
  }

  .feedback-list.has-new-feedback {
    animation: pulse-glow 2s ease-in-out;
  }

  @keyframes pulse-glow {
    0%, 100% { background: transparent; }
    50% { background: rgba(157, 187, 255, 0.05); }
  }

  /* Feedback Item Styles */
  .feedback-item {
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.25);
    border-radius: 12px;
    padding: 0;
    position: relative;
    overflow: hidden;
    animation: slideInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    transform-origin: top center;
  }

  .feedback-item.new-feedback {
    border-color: rgba(157, 187, 255, 0.5);
    box-shadow: 0 0 20px rgba(157, 187, 255, 0.2);
  }

  .feedback-linebox-content {
    padding: 20px;
    position: relative;
    z-index: 2;
  }

  .feedback-item-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 15px;
  }

  .feedback-user-info {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .user-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: white;
    font-size: 16px;
    flex-shrink: 0;
  }

  .user-details {
    display: flex;
    flex-direction: column;
  }

  .feedback-user-name {
    font-weight: 600;
    color: #9dbbff;
    font-size: 1rem;
  }

  .feedback-time {
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.7);
    margin-top: 2px;
  }

  .new-badge {
    background: linear-gradient(135deg, #ff6b6b, #ffa726);
    color: white;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
    animation: pulse 2s infinite;
  }

  .feedback-item-body {
    margin-bottom: 15px;
  }

  .feedback-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #fff;
    margin: 0 0 8px 0;
    line-height: 1.4;
  }

  .feedback-message {
    color: #ffffff;
    line-height: 1.5;
    margin: 0;
    font-size: 0.95rem;
  }

  .feedback-item-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 15px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .feedback-meta {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.6);
  }

  .feedback-meta svg {
    width: 14px;
    height: 14px;
  }

  /* Animations */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; transform: scale(1); }
    50% { opacity: 0.8; transform: scale(1.05); }
  }

  .feedback-item.fade-out {
    animation: slideOutUp 0.6s cubic-bezier(0.55, 0.085, 0.68, 0.53) forwards;
  }

  @keyframes slideOutUp {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(-30px) scale(0.95);
    }
  }

  .feedback-shimmer {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    animation: shimmer 3s infinite;
    z-index: 1;
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  /* Scrollbar Styling */
  .feedback-list::-webkit-scrollbar {
    width: 6px;
  }

  .feedback-list::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }

  .feedback-list::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
  }

  .feedback-list::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }

  /* Status Messages */
  .feedback-status {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 20px;
    padding: 15px;
    border-radius: 8px;
    text-align: left;
    font-weight: 600;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }

  .feedback-status.success {
    background: rgba(76, 175, 80, 0.15);
    border: 1px solid rgba(76, 175, 80, 0.3);
    color: #4caf50;
    opacity: 1;
    transform: translateY(0);
  }

  .feedback-status.error {
    background: rgba(244, 67, 54, 0.15);
    border: 1px solid rgba(244, 67, 54, 0.3);
    color: #f44336;
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .feedback-display-linebox {
      padding: 20px;
    }
    
    .feedback-item-header {
      flex-direction: column;
      gap: 10px;
      align-items: flex-start;
    }
    
    .feedback-user-info {
      width: 100%;
    }
    
    .new-badge {
      align-self: flex-start;
    }
    
    .feedback-linebox-content {
      padding: 15px;
    }
  }









  /* Feedback Display Section Styles */
  .feedback-display-section {
    margin: 60px 0;
    max-width: 800px;
  }

  .feedback-display-linebox {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    padding: 30px;
    backdrop-filter: blur(10px);
  }

  .feedback-display-header {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 25px;
    padding-bottom: 15px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }

  .feedback-display-header svg {
    color: #9dbbff;
  }

  .feedback-display-header h3 {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    color: #fff;
  }

  .feedback-count {
    color: #9dbbff;
    font-size: 0.9rem;
    margin-left: auto;
  }

  .feedback-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
    max-height: 500px;
    overflow-y: auto;
    padding-right: 10px;
  }

  /* Scrollbar styling */
  .feedback-list::-webkit-scrollbar {
    width: 6px;
  }

  .feedback-list::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }

  .feedback-list::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
  }

  .feedback-list::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }

  /* Feedback Item Styles dengan animasi Framer Motion-like */
  .feedback-item {
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.25);
    border-radius: 12px;
    padding: 20px;
    position: relative;
    overflow: hidden;
    animation: slideInUp 0.6s ease-out forwards;
    transform-origin: top center;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  /* Animasi masuk seperti Framer Motion */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Animasi keluar dengan efek bergerak */
  .feedback-item.fade-out {
    animation: slideOutUp 0.6s ease-in forwards;
  }

  @keyframes slideOutUp {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(-30px) scale(0.95);
    }
  }

  /* Efek hover yang halus */
  .feedback-item:hover {
    transform: translateY(-2px);
    border-color: rgba(255, 255, 255, 0.4);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }

  /* Garis putih pudar yang bergerak */
  .feedback-item::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    animation: shimmer 2s infinite;
    z-index: 1;
  }

  @keyframes shimmer {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }

  /* Konten feedback */
  .feedback-content {
    position: relative;
    z-index: 2;
  }

  .feedback-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 10px;
  }

  .feedback-user {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .user-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: linear-gradient(45deg, #667eea, #764ba2);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: white;
    font-size: 14px;
  }

  .user-info h4 {
    margin: 0;
    font-size: 1rem;
    color: #9dbbff;
    font-weight: 600;
  }

  .feedback-time {
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.6);
    white-space: nowrap;
    margin-left: 15px;
  }

  .feedback-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: #fff;
    margin: 5px 0 10px 0;
    line-height: 1.4;
  }

  .feedback-message {
    color: #ffffff;
    line-height: 1.5;
    margin: 0;
    font-size: 0.95rem;
  }

  /* Indikator status baru */
  .new-indicator {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #ff6b6b;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.2);
      opacity: 0.7;
    }
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .feedback-header {
      flex-direction: column;
      gap: 5px;
    }
    
    .feedback-time {
      margin-left: 42px; /* Sesuai dengan avatar + gap */
    }
    
    .feedback-item {
      padding: 15px;
    }
  }

  /* Feedback Section Styles (existing) */
  .feedback-section {
    margin: 40px 0;
    max-width: 800px;
  }

  .feedback-linebox {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    padding: 30px;
    backdrop-filter: blur(10px);
    animation: fadeInUp 0.8s ease-out;
  }

  .feedback-header {
    display: flex;
    align-items: center;
    gap: 20px;
    margin-bottom: 30px;
  }

  .feedback-icon svg {
    color: #9dbbff;
  }

  .feedback-title {
    flex: 1;
  }

  .feedback-title h3 {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0 0 5px 0;
    color: #fff;
  }

  .feedback-title p {
    margin: 0;
    color: #ccc;
    opacity: 0.8;
  }

  .last-update {
    font-size: 0.9rem;
    color: #9dbbff;
    margin-top: 5px;
    display: block;
  }

  .feedback-arrow svg {
    color: rgba(255, 255, 255, 0.6);
  }

  .feedback-form {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-input, .form-textarea {
    padding: 12px 16px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    background: rgba(255, 255, 255, 0.05);
    color: #fff;
    font-family: 'Space Mono', monospace;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .form-input:focus, .form-textarea:focus {
    outline: none;
    border-color: #9dbbff;
    background: rgba(255, 255, 255, 0.08);
  }

  .form-textarea {
    resize: vertical;
    min-height: 100px;
  }

  .submit-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    padding: 12px 24px;
    background: linear-gradient(45deg, #667eea, #764ba2);
    border: none;
    border-radius: 8px;
    color: #fff;
    font-family: 'Space Mono', monospace;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .submit-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
  }

  .submit-btn:active {
    transform: translateY(0);
  }

  .feedback-status {
    margin-top: 20px;
    padding: 15px;
    border-radius: 8px;
    text-align: center;
    font-weight: 600;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }

  .feedback-status.success {
    background: rgba(76, 175, 80, 0.2);
    border: 1px solid rgba(76, 175, 80, 0.5);
    color: #4caf50;
    opacity: 1;
    transform: translateY(0);
  }

  .feedback-status.error {
    background: rgba(244, 67, 54, 0.2);
    border: 1px solid rgba(244, 67, 54, 0.5);
    color: #f44336;
    opacity: 1;
    transform: translateY(0);
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .feedback-header {
      flex-direction: column;
      text-align: center;
      gap: 15px;
    }
    
    .feedback-arrow {
      display: none;
    }
  }





/* Legal Section Styles */
.legal-section {
  margin: 60px 0;
  max-width: 800px;
}

.legal-linebox {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  padding: 30px;
  backdrop-filter: blur(10px);
}

.legal-content {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 25px;
}

.legal-icon svg {
  color: #9dbbff;
}

.legal-text h3 {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0 0 5px 0;
  color: #fff;
}

.legal-text p {
  margin: 0;
  color: #ccc;
  opacity: 0.8;
}

.legal-arrow svg {
  color: rgba(255, 255, 255, 0.6);
  margin-left: auto;
}

.legal-links {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
}

.legal-link {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 12px 20px;
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 8px;
  color: #fff;
  text-decoration: none;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.05);
}

.legal-link:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-2px);
}

.legal-link svg {
  color: #9dbbff;
}

/* Responsive */
@media (max-width: 768px) {
  .legal-content {
    flex-direction: column;
    text-align: center;
    gap: 15px;
  }
  
  .legal-arrow {
    display: none;
  }
  
  .legal-links {
    flex-direction: column;
  }
}
  
  .home-container {
    padding: 40px 0;
   font-family: 'Space Mono', monospace;

  }
  
.hero-section {
  text-align: left;   /* hilangkan center */
  padding: 60px 0;
   font-family: 'Space Mono', monospace;
 
}

.hero-title {
  font-size: 3rem;
  font-weight: 700;
  margin-bottom: 20px;
  font-family: 'Space Mono', monospace; /* ganti Montserrat ke Space Mono */
  color: #fff;

}

.hero-subtitle {
  font-size: 1.3rem;
  max-width: 600px;
  margin: 0 0 40px 0; /* rata kiri */
  opacity: 0.8;
  color: #ccc;
   font-family: 'Space Mono', monospace;

}
  
  .linebox {
    border-radius: 12px;
    padding: 30px;
    max-width: 800px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
 border: 1px solid rgba(255, 255, 255, 0.3); /* garis putih pudar */
  justify-content: start; /* biar item rata kiri */
font-family: 'Space Mono', monospace;
 margin-bottom: 60px;
padding-left: 100px; 

  }
  
.linebox-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px 15px;
  border-radius: 8px;
  transition: all 0.3s ease;
  cursor: pointer;
  border: 1px solid rgba(255, 255, 255, 0.3); /* garis putih pudar */
  background: none; /* hilangkan fill background */
font-family: 'Space Mono', monospace;
padding-left: 100px; 
}


  
  .linebox-item svg {
    color: #667eea;
    margin-bottom: 15px;
  }
  
  .linebox-item span {
    font-weight: 600;
    color: #fff;
 font-family: 'Space Mono', monospace;
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.2rem;
    }
    
    .hero-subtitle {
      font-size: 1.1rem;
    }
    
    .linebox {
      grid-template-columns: repeat(2, 1fr);
      gap: 15px;
      padding: 20px;
    }
  }
  
  @media (max-width: 480px) {
    .linebox {
      grid-template-columns: 1fr;
    }
  }



/* Development Notice Styles */
.development-notice {
  margin: 40px 0;
  max-width: 800px;
}

.development-linebox {
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  padding: 30px;
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.development-linebox::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  animation: shimmer 3s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

.development-content {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 20px;
}

.development-icon {
  flex-shrink: 0;
}

.animated-icon {
  color: #ff6b6b;
  animation: bounce 2s infinite, pulse 1.5s infinite;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.development-text h3 {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0 0 10px 0;
  color: #ff6b6b;
  animation: glow 2s ease-in-out infinite alternate;
}

@keyframes glow {
  from {
    text-shadow: 0 0 5px #ff6b6b, 0 0 10px #ff6b6b;
  }
  to {
    text-shadow: 0 0 10px #ff6b6b, 0 0 20px #ff6b6b, 0 0 30px #ff6b6b;
  }
}

.development-text p {
  margin: 0;
  color: #ccc;
  line-height: 1.6;
}

.development-progress {
  display: flex;
  align-items: center;
  gap: 15px;
}

.progress-bar {
  flex: 1;
  height: 8px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, #ff6b6b, #ffa726);
  border-radius: 4px;
  width: 75%;
  animation: progressFill 2s ease-in-out infinite;
}

@keyframes progressFill {
  0%, 100% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(1.05);
  }
}

.progress-text {
  font-size: 0.9rem;
  color: #ffa726;
  font-weight: 600;
  min-width: 80px;
}







  /* TIMELINE STYLES */
  .timeline-container {
    position: relative;
    max-width: 1100px;
    margin: 0 auto;
    padding-left: 60px;
    font-family: 'Space Mono', monospace;
  }

  /* Garis vertikal utama */
  .timeline-container::before {
    content: "";
    position: absolute;
    left: -40px;
    top: 0;
    bottom: 0;
    border-left: 2px dashed rgba(255, 255, 255, 0.25);
    z-index: 1;

  }

  .timeline-item {
    position: relative;
    margin-bottom: 80px;
    padding-left: 60px;
    margin-top: 40px;
    font-family: 'Space Mono', monospace;
  }

 .timeline-dot {
  position: absolute;
  left: -40px;               /* sama dengan garis */
  top: 20px;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: #222;
  border: 2px solid rgba(255,255,255,0.4);
  z-index: 2;

  /* trik biar bulatan center tepat di garis */
  transform: translateX(-50%);
}

/* Titik aktif dengan pemancar */
.timeline-dot.active {
  background: #fff;
  border-color: #6ea6ff;
  box-shadow: 0 0 12px #6ea6ff, 0 0 24px #6ea6ff;
  animation: blink 1.6s infinite;
}

/* Animasi kedap-kedip */
@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

/* Efek ripple/pemancar keluar */
.timeline-dot.active::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 2px solid #6ea6ff;
  transform: translate(-50%, -50%) scale(0.5);
  opacity: 0;
  animation: ripple 2s infinite;
}

@keyframes ripple {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0.8;
  }
  70% {
    transform: translate(-50%, -50%) scale(1.8);
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

/* Garis penghubung dari dot ke konten */
.timeline-connector {
  position: absolute;
  left: -40px;
  top: 39px; /* Mulai dari bawah dot */
  width: 60px; /* Panjang garis horizontal */
  height: 2px;
  background: rgba(255, 255, 255, 0.3);
  z-index: 1;
}

.timeline-content {
  display: flex;
  flex-direction: row;
  gap: 30px;
  align-items: flex-start;
  font-family: 'Space Mono', monospace;
}

  /* Kiri - tanggal dan judul */
  .timeline-left {
    min-width: 220px;
    text-align: left;
  }

  .date {
    font-size: 20px;
    font-weight: 600;
    color: #9dbbff;
  }

  .title {
    font-size: 32px;
    font-weight: 700;
    margin: 6px 0;
    color: #fff;
  }

  .label.linebox {
    display: inline-block;
    background: rgba(0,0,0,0.6);
    border: 1px solid rgba(255,255,255,0.3);
    padding: 10px 16px;
    border-radius: 8px;
    font-size: 16px;
    color: #fff;
    text-transform: uppercase;
  }

  /* Kanan - deskripsi */
  .timeline-right.linebox {
    flex: 1;
    background: rgba(0,0,0,0.6);
    border: 1px solid rgba(255,255,255,0.3);
    padding: 28px 32px;
    border-radius: 8px;
    text-align: left;
    position: relative;
  }

  .timeline-right .text {
    font-size: 20px;
    line-height: 1.7;
    color: #ddd;
  }

  /* Responsive timeline */
  @media (max-width: 768px) {
    .timeline-content {
      flex-direction: column;
    }
    
    .timeline-left {
      min-width: unset;
    }
    
    .timeline-container::before {
      left: 18px;
    }
    
    .timeline-dot {
      left: 10px;
    }

    .timeline-connector {
      left: 10px;
      width: 30px;
    }
    
    .timeline-item {
      padding-left: 40px;
    }
  }
</style>


<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
    import { getFirestore, collection, addDoc, onSnapshot, serverTimestamp, query, orderBy, deleteDoc, getDoc, writeBatch, setDoc, doc, updateDoc, where, getDocs, documentId, limit, increment, getCountFromServer,  arrayUnion, 
    arrayRemove, deleteField, runTransaction  } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-firestore.js";
import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword , signInWithPopup, signOut, onAuthStateChanged, GoogleAuthProvider,  setPersistence,
  browserLocalPersistence  } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-auth.js"; // Pastikan semua fungsi auth yang Anda butuhkan diimpor


    // Konfigurasi Firebase
    const firebaseConfig = {
        apiKey: "AIzaSyCYbxo8n1zn-Y3heCIn_PmrsK44_OrdEw4",
        authDomain: "noted-a3498.firebaseapp.com",
        projectId: "noted-a3498",
        storageBucket: "noted-a3498.appspot.com",
        messagingSenderId: "1077214793842",
        appId: "1:1077214793842:web:a70cc3643eceb53e3932eb",
        measurementId: "G-SENDQS5Y7K"
    };

    // Init Firebase
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    const auth = getAuth(app);



document.addEventListener('DOMContentLoaded', function() {
    // Buat elemen kursor
    const cursor = document.createElement('div');
    cursor.classList.add('custom-cursor');
    
    const cursorDot = document.createElement('div');
    cursorDot.classList.add('cursor-dot');
    
    document.body.appendChild(cursor);
    document.body.appendChild(cursorDot);
    
    // Posisi kursor
    let mouseX = 0;
    let mouseY = 0;
    let cursorX = 0;
    let cursorY = 0;
    let dotX = 0;
    let dotY = 0;
    
    // Update posisi kursor
    document.addEventListener('mousemove', function(e) {
      mouseX = e.clientX;
      mouseY = e.clientY;
    });
    
    // Animasi kursor
    function animateCursor() {
      // Kursor utama dengan delay
      cursorX += (mouseX - cursorX) * 0.1;
      cursorY += (mouseY - cursorY) * 0.1;
      
      cursor.style.left = cursorX + 'px';
      cursor.style.top = cursorY + 'px';
      
      // Dot kursor tanpa delay
      dotX = mouseX;
      dotY = mouseY;
      
      cursorDot.style.left = (dotX - 2) + 'px';
      cursorDot.style.top = (dotY - 2) + 'px';
      
      requestAnimationFrame(animateCursor);
    }
    
    animateCursor();
    
    // Efek hover untuk elemen interaktif
    const hoverElements = document.querySelectorAll('a, button, .nav-link, .contact-btn');
    const textElements = document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, span, li');
    
    hoverElements.forEach(el => {
      el.addEventListener('mouseenter', () => {
        cursor.classList.add('cursor-hover');
      });
      
      el.addEventListener('mouseleave', () => {
        cursor.classList.remove('cursor-hover');
      });
    });
    
    textElements.forEach(el => {
      el.addEventListener('mouseenter', () => {
        cursor.classList.add('cursor-text');
      });
      
      el.addEventListener('mouseleave', () => {
        cursor.classList.remove('cursor-text');
      });
    });
    
    // Efek khusus untuk tombol
    const buttons = document.querySelectorAll('button, .contact-btn');
    
    buttons.forEach(el => {
      el.addEventListener('mouseenter', () => {
        cursor.classList.add('cursor-button');
      });
      
      el.addEventListener('mouseleave', () => {
        cursor.classList.remove('cursor-button');
      });
    });
    
    // Sembunyikan kursor saat keluar dari window
    document.addEventListener('mouseout', () => {
      cursor.style.opacity = '0';
      cursorDot.style.opacity = '0';
    });
    
    document.addEventListener('mouseover', () => {
      cursor.style.opacity = '1';
      cursorDot.style.opacity = '1';
    });
  });








 document.addEventListener("DOMContentLoaded", () => {
    const feedbackForm = document.getElementById("feedbackForm");
    const statusDiv = document.getElementById("feedbackStatus");
    const latestContainer = document.getElementById("latestFeedback");
    const feedbackCountEl = document.getElementById("feedbackCount");
    const lastUpdateTimeEl = document.getElementById("lastUpdateTime");

    // Update waktu terakhir
    function updateLastUpdateTime() {
      const now = new Date();
      const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      };
      lastUpdateTimeEl.textContent = now.toLocaleDateString('id-ID', options);
    }

    // Helper: waktu relatif
    function timeAgo(date) {
      const now = new Date();
      const diffMs = now - date;
      const diffMin = Math.floor(diffMs / 60000);
      const diffHr = Math.floor(diffMin / 60);
      const diffDay = Math.floor(diffHr / 24);

      if (diffMin < 1) return "baru saja";
      if (diffMin < 60) return `${diffMin} menit yang lalu`;
      if (diffHr < 24) return `${diffHr} jam yang lalu`;
      return `${diffDay} hari yang lalu`;
    }

    // Hitung total feedback
    async function updateFeedbackCount() {
      try {
        const coll = collection(db, "feedbacks");
        const snapshot = await getCountFromServer(coll);
        const count = snapshot.data().count;
        feedbackCountEl.textContent = count;
      } catch (error) {
        console.error("Error counting feedbacks:", error);
      }
    }

    // Render item feedback dengan design linebox yang bagus
    function renderFeedbackItem(data, id) {
      const date = data.timestamp?.toDate ? data.timestamp.toDate() : new Date();
      const timeAgoText = timeAgo(date);
      const isNew = (new Date() - date) < (5 * 60 * 1000); // Baru jika < 5 menit
      
      const wrapper = document.createElement("div");
      wrapper.className = `feedback-item ${isNew ? 'new-feedback' : ''}`;
      wrapper.setAttribute('data-id', id);
      
      wrapper.innerHTML = `
        <div class="feedback-linebox-content">
          <div class="feedback-item-header">
            <div class="feedback-user-info">
              <div class="user-avatar">${(data.name || "A").charAt(0).toUpperCase()}</div>
              <div class="user-details">
                <span class="feedback-user-name">${data.name || "Anonim"}</span>
                <span class="feedback-time">${timeAgoText}</span>
              </div>
            </div>
            ${isNew ? '<span class="new-badge">BARU</span>' : ''}
          </div>
          
          <div class="feedback-item-body">
            <h4 class="feedback-title">${data.title || "Tanpa Judul"}</h4>
            <p class="feedback-message">${data.message}</p>
          </div>
          
          <div class="feedback-item-footer">
            <div class="feedback-meta">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12 6 12 12 16 14"></polyline>
              </svg>
              <span>${date.toLocaleDateString('id-ID')}</span>
            </div>
          </div>
        </div>
        
        <div class="feedback-shimmer"></div>
      `;

      // Auto remove setelah 30 detik untuk feedback baru
      if (isNew) {
        setTimeout(() => {
          wrapper.classList.add('fade-out');
          setTimeout(() => {
            if (wrapper.parentNode) {
              wrapper.parentNode.removeChild(wrapper);
              updateFeedbackCount(); // Update count setelah remove
            }
          }, 600);
        }, 30000);
      }

      return wrapper;
    }

    // Submit form
    if (feedbackForm) {
      feedbackForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const name = document.getElementById("feedbackName").value.trim();
        const title = document.getElementById("feedbackTitle").value.trim();
        const message = document.getElementById("feedbackMessage").value.trim();

        if (!title || !message) {
          showStatus("Harap isi judul dan keterangan!", "error");
          return;
        }

        const submitBtn = feedbackForm.querySelector("button");
        const originalText = submitBtn.innerHTML;
        submitBtn.disabled = true;
        submitBtn.innerHTML = `
          <span>Mengirim...</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2z"></path>
            <path d="M12 6v6l4 2"></path>
          </svg>
        `;

        try {
          await addDoc(collection(db, "feedbacks"), {
            name: name || "Anonim",
            title,
            message,
            timestamp: serverTimestamp(),
            page: window.location.href,
            status: 'active'
          });

          showStatus("✅ Terima kasih! Saran Anda telah dikirim.", "success");
          feedbackForm.reset();
          updateLastUpdateTime();
          
          setTimeout(() => {
            hideStatus();
          }, 5000);
        } catch (error) {
          console.error("Error saving feedback:", error);
          showStatus("❌ Maaf, terjadi error. Silakan coba lagi.", "error");
        } finally {
          submitBtn.disabled = false;
          submitBtn.innerHTML = originalText;
        }
      });
    }

    // Status pesan
    function showStatus(message, type) {
      statusDiv.textContent = message;
      statusDiv.className = `feedback-status ${type}`;
      
      // Tambahkan icon berdasarkan type
      if (type === 'success') {
        statusDiv.innerHTML = `
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          ${message}
        `;
      } else if (type === 'error') {
        statusDiv.innerHTML = `
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="15" y1="9" x2="9" y2="15"></line>
            <line x1="9" y1="9" x2="15" y2="15"></line>
          </svg>
          ${message}
        `;
      }
    }

    function hideStatus() {
      statusDiv.className = "feedback-status";
      statusDiv.textContent = "";
    }

    // Listener realtime dengan optimasi
    const q = query(collection(db, "feedbacks"), orderBy("timestamp", "desc"));
    
    onSnapshot(q, (snapshot) => {
      latestContainer.innerHTML = '';
      let hasNewFeedback = false;
      
      snapshot.forEach((doc) => {
        const data = doc.data();
        const item = renderFeedbackItem(data, doc.id);
        latestContainer.appendChild(item);
        
        // Check jika ada feedback baru
        if (data.timestamp?.toDate) {
          const feedbackTime = data.timestamp.toDate();
          if ((new Date() - feedbackTime) < (5 * 60 * 1000)) {
            hasNewFeedback = true;
          }
        }
      });

      // Update counter
      updateFeedbackCount();
      
      // Animasi untuk feedback baru
      if (hasNewFeedback) {
        latestContainer.classList.add('has-new-feedback');
        setTimeout(() => {
          latestContainer.classList.remove('has-new-feedback');
        }, 2000);
      }
    });

    // Inisialisasi
    updateLastUpdateTime();
    updateFeedbackCount();
    
    // Update waktu setiap menit
    setInterval(updateLastUpdateTime, 60000);
  });
</script>







